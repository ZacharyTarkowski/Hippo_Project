ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"ILI9341_GFX.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ILI9341_Draw_Hollow_Circle,"ax",%progbits
  20              		.align	1
  21              		.global	ILI9341_Draw_Hollow_Circle
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	ILI9341_Draw_Hollow_Circle:
  27              	.LVL0:
  28              	.LFB137:
  29              		.file 1 "Core/Src/ILI9341_GFX.c"
   1:Core/Src/ILI9341_GFX.c **** //	MIT License
   2:Core/Src/ILI9341_GFX.c **** //
   3:Core/Src/ILI9341_GFX.c **** //	Copyright (c) 2017 Matej Artnak
   4:Core/Src/ILI9341_GFX.c **** //
   5:Core/Src/ILI9341_GFX.c **** //	Permission is hereby granted, free of charge, to any person obtaining a copy
   6:Core/Src/ILI9341_GFX.c **** //	of this software and associated documentation files (the "Software"), to deal
   7:Core/Src/ILI9341_GFX.c **** //	in the Software without restriction, including without limitation the rights
   8:Core/Src/ILI9341_GFX.c **** //	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:Core/Src/ILI9341_GFX.c **** //	copies of the Software, and to permit persons to whom the Software is
  10:Core/Src/ILI9341_GFX.c **** //	furnished to do so, subject to the following conditions:
  11:Core/Src/ILI9341_GFX.c **** //
  12:Core/Src/ILI9341_GFX.c **** //	The above copyright notice and this permission notice shall be included in all
  13:Core/Src/ILI9341_GFX.c **** //	copies or substantial portions of the Software.
  14:Core/Src/ILI9341_GFX.c **** //
  15:Core/Src/ILI9341_GFX.c **** //	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Core/Src/ILI9341_GFX.c **** //	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:Core/Src/ILI9341_GFX.c **** //	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:Core/Src/ILI9341_GFX.c **** //	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:Core/Src/ILI9341_GFX.c **** //	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:Core/Src/ILI9341_GFX.c **** //	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  21:Core/Src/ILI9341_GFX.c **** //	SOFTWARE.
  22:Core/Src/ILI9341_GFX.c **** //
  23:Core/Src/ILI9341_GFX.c **** //
  24:Core/Src/ILI9341_GFX.c **** //
  25:Core/Src/ILI9341_GFX.c **** //-----------------------------------
  26:Core/Src/ILI9341_GFX.c **** //	ILI9341 GFX library for STM32
  27:Core/Src/ILI9341_GFX.c **** //-----------------------------------
  28:Core/Src/ILI9341_GFX.c **** //
  29:Core/Src/ILI9341_GFX.c **** //	Very simple GFX library built upon ILI9342_STM32_Driver library.
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 2


  30:Core/Src/ILI9341_GFX.c **** //	Adds basic shapes, image and font drawing capabilities to ILI9341
  31:Core/Src/ILI9341_GFX.c **** //
  32:Core/Src/ILI9341_GFX.c **** //	Library is written for STM32 HAL library and supports STM32CUBEMX. To use the library with Cube 
  33:Core/Src/ILI9341_GFX.c **** //	you need to tick the box that generates peripheral initialization code in their own respective .
  34:Core/Src/ILI9341_GFX.c **** //
  35:Core/Src/ILI9341_GFX.c **** //
  36:Core/Src/ILI9341_GFX.c **** //-----------------------------------
  37:Core/Src/ILI9341_GFX.c **** //	How to use this library
  38:Core/Src/ILI9341_GFX.c **** //-----------------------------------
  39:Core/Src/ILI9341_GFX.c **** //
  40:Core/Src/ILI9341_GFX.c **** //	-If using MCUs other than STM32F7 you will have to change the #include "stm32f7xx_hal.h" in the 
  41:Core/Src/ILI9341_GFX.c **** //
  42:Core/Src/ILI9341_GFX.c **** //	If using "ILI9341_STM32_Driver" then all other prequisites to use the library have allready been
  43:Core/Src/ILI9341_GFX.c **** //	Simply include the library and it is ready to be used
  44:Core/Src/ILI9341_GFX.c **** //
  45:Core/Src/ILI9341_GFX.c **** //-----------------------------------
  46:Core/Src/ILI9341_GFX.c **** 
  47:Core/Src/ILI9341_GFX.c **** 
  48:Core/Src/ILI9341_GFX.c **** #include "ILI9341_STM32_Driver.h"
  49:Core/Src/ILI9341_GFX.c **** #include "ILI9341_GFX.h"
  50:Core/Src/ILI9341_GFX.c **** #include "5x5_font.h"
  51:Core/Src/ILI9341_GFX.c **** #include "spi.h"
  52:Core/Src/ILI9341_GFX.c **** 
  53:Core/Src/ILI9341_GFX.c **** /*Draw hollow circle at X,Y location with specified radius and colour. X and Y represent circles ce
  54:Core/Src/ILI9341_GFX.c **** void ILI9341_Draw_Hollow_Circle(uint16_t X, uint16_t Y, uint16_t Radius, uint16_t Colour)
  55:Core/Src/ILI9341_GFX.c **** {
  30              		.loc 1 55 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 32
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 55 1 is_stmt 0 view .LVU1
  35 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 36
  38              		.cfi_offset 4, -36
  39              		.cfi_offset 5, -32
  40              		.cfi_offset 6, -28
  41              		.cfi_offset 7, -24
  42              		.cfi_offset 8, -20
  43              		.cfi_offset 9, -16
  44              		.cfi_offset 10, -12
  45              		.cfi_offset 11, -8
  46              		.cfi_offset 14, -4
  47 0004 89B0     		sub	sp, sp, #36
  48              	.LCFI1:
  49              		.cfi_def_cfa_offset 72
  50 0006 8146     		mov	r9, r0
  51 0008 8846     		mov	r8, r1
  52 000a 0792     		str	r2, [sp, #28]
  53 000c 1E46     		mov	r6, r3
  56:Core/Src/ILI9341_GFX.c **** 	int x = Radius-1;
  54              		.loc 1 56 2 is_stmt 1 view .LVU2
  55              		.loc 1 56 6 is_stmt 0 view .LVU3
  56 000e 1346     		mov	r3, r2
  57              	.LVL1:
  58              		.loc 1 56 6 view .LVU4
  59 0010 013A     		subs	r2, r2, #1
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 3


  60              	.LVL2:
  61              		.loc 1 56 6 view .LVU5
  62 0012 0092     		str	r2, [sp]
  63              	.LVL3:
  57:Core/Src/ILI9341_GFX.c ****     int y = 0;
  64              		.loc 1 57 5 is_stmt 1 view .LVU6
  58:Core/Src/ILI9341_GFX.c ****     int dx = 1;
  65              		.loc 1 58 5 view .LVU7
  59:Core/Src/ILI9341_GFX.c ****     int dy = 1;
  66              		.loc 1 59 5 view .LVU8
  60:Core/Src/ILI9341_GFX.c ****     int err = dx - (Radius << 1);
  67              		.loc 1 60 5 view .LVU9
  68              		.loc 1 60 28 is_stmt 0 view .LVU10
  69 0014 5B00     		lsls	r3, r3, #1
  70              		.loc 1 60 9 view .LVU11
  71 0016 C3F10107 		rsb	r7, r3, #1
  72              	.LVL4:
  61:Core/Src/ILI9341_GFX.c **** 
  62:Core/Src/ILI9341_GFX.c ****     while (x >= y)
  73              		.loc 1 62 5 is_stmt 1 view .LVU12
  59:Core/Src/ILI9341_GFX.c ****     int err = dx - (Radius << 1);
  74              		.loc 1 59 9 is_stmt 0 view .LVU13
  75 001a 0123     		movs	r3, #1
  76 001c 0693     		str	r3, [sp, #24]
  58:Core/Src/ILI9341_GFX.c ****     int dy = 1;
  77              		.loc 1 58 9 view .LVU14
  78 001e 0593     		str	r3, [sp, #20]
  57:Core/Src/ILI9341_GFX.c ****     int dx = 1;
  79              		.loc 1 57 9 view .LVU15
  80 0020 0023     		movs	r3, #0
  81 0022 0193     		str	r3, [sp, #4]
  82              		.loc 1 62 11 view .LVU16
  83 0024 11E0     		b	.L2
  84              	.LVL5:
  85              	.L8:
  63:Core/Src/ILI9341_GFX.c ****     {
  64:Core/Src/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X + x, Y + y, Colour);
  65:Core/Src/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X + y, Y + x, Colour);
  66:Core/Src/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X - y, Y + x, Colour);
  67:Core/Src/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X - x, Y + y, Colour);
  68:Core/Src/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X - x, Y - y, Colour);
  69:Core/Src/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X - y, Y - x, Colour);
  70:Core/Src/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X + y, Y - x, Colour);
  71:Core/Src/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X + x, Y - y, Colour);
  72:Core/Src/ILI9341_GFX.c **** 
  73:Core/Src/ILI9341_GFX.c ****         if (err <= 0)
  74:Core/Src/ILI9341_GFX.c ****         {
  75:Core/Src/ILI9341_GFX.c ****             y++;
  86              		.loc 1 75 13 is_stmt 1 view .LVU17
  87              		.loc 1 75 14 is_stmt 0 view .LVU18
  88 0026 019B     		ldr	r3, [sp, #4]
  89 0028 0133     		adds	r3, r3, #1
  90 002a 0193     		str	r3, [sp, #4]
  91              	.LVL6:
  76:Core/Src/ILI9341_GFX.c ****             err += dy;
  92              		.loc 1 76 13 is_stmt 1 view .LVU19
  93              		.loc 1 76 17 is_stmt 0 view .LVU20
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 4


  94 002c 069B     		ldr	r3, [sp, #24]
  95              	.LVL7:
  96              		.loc 1 76 17 view .LVU21
  97 002e 1F44     		add	r7, r7, r3
  98              	.LVL8:
  77:Core/Src/ILI9341_GFX.c ****             dy += 2;
  99              		.loc 1 77 13 is_stmt 1 view .LVU22
 100              		.loc 1 77 16 is_stmt 0 view .LVU23
 101 0030 0233     		adds	r3, r3, #2
 102 0032 0693     		str	r3, [sp, #24]
 103              	.LVL9:
 104              		.loc 1 77 16 view .LVU24
 105 0034 5AE0     		b	.L3
 106              	.LVL10:
 107              	.L9:
  78:Core/Src/ILI9341_GFX.c ****         }
  79:Core/Src/ILI9341_GFX.c ****         if (err > 0)
  80:Core/Src/ILI9341_GFX.c ****         {
  81:Core/Src/ILI9341_GFX.c ****             x--;
 108              		.loc 1 81 13 is_stmt 1 view .LVU25
 109              		.loc 1 81 14 is_stmt 0 view .LVU26
 110 0036 009B     		ldr	r3, [sp]
 111 0038 013B     		subs	r3, r3, #1
 112 003a 0093     		str	r3, [sp]
 113              	.LVL11:
  82:Core/Src/ILI9341_GFX.c ****             dx += 2;
 114              		.loc 1 82 13 is_stmt 1 view .LVU27
 115              		.loc 1 82 16 is_stmt 0 view .LVU28
 116 003c 059B     		ldr	r3, [sp, #20]
 117              	.LVL12:
 118              		.loc 1 82 16 view .LVU29
 119 003e 0233     		adds	r3, r3, #2
 120 0040 0593     		str	r3, [sp, #20]
 121              	.LVL13:
  83:Core/Src/ILI9341_GFX.c ****             err += (-Radius << 1) + dx;
 122              		.loc 1 83 13 is_stmt 1 view .LVU30
 123              		.loc 1 83 35 is_stmt 0 view .LVU31
 124 0042 079A     		ldr	r2, [sp, #28]
 125 0044 A3EB4203 		sub	r3, r3, r2, lsl #1
 126              	.LVL14:
 127              		.loc 1 83 17 view .LVU32
 128 0048 1F44     		add	r7, r7, r3
 129              	.LVL15:
 130              	.L2:
  62:Core/Src/ILI9341_GFX.c ****     {
 131              		.loc 1 62 11 is_stmt 1 view .LVU33
 132 004a 009B     		ldr	r3, [sp]
 133 004c 019A     		ldr	r2, [sp, #4]
 134 004e 9342     		cmp	r3, r2
 135 0050 4FDB     		blt	.L7
  64:Core/Src/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X + y, Y + x, Colour);
 136              		.loc 1 64 9 view .LVU34
 137 0052 BDF80050 		ldrh	r5, [sp]
 138 0056 05EB0903 		add	r3, r5, r9
 139 005a 9BB2     		uxth	r3, r3
 140 005c BDF80440 		ldrh	r4, [sp, #4]
 141 0060 04EB080B 		add	fp, r4, r8
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 5


 142 0064 1FFA8BFB 		uxth	fp, fp
 143 0068 3246     		mov	r2, r6
 144 006a 5946     		mov	r1, fp
 145 006c 0293     		str	r3, [sp, #8]
 146 006e 1846     		mov	r0, r3
 147 0070 FFF7FEFF 		bl	ILI9341_Draw_Pixel
 148              	.LVL16:
  65:Core/Src/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X - y, Y + x, Colour);
 149              		.loc 1 65 9 view .LVU35
 150 0074 04EB0903 		add	r3, r4, r9
 151 0078 9BB2     		uxth	r3, r3
 152 007a 05EB080A 		add	r10, r5, r8
 153 007e 1FFA8AFA 		uxth	r10, r10
 154 0082 3246     		mov	r2, r6
 155 0084 5146     		mov	r1, r10
 156 0086 0393     		str	r3, [sp, #12]
 157 0088 1846     		mov	r0, r3
 158 008a FFF7FEFF 		bl	ILI9341_Draw_Pixel
 159              	.LVL17:
  66:Core/Src/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X - x, Y + y, Colour);
 160              		.loc 1 66 9 view .LVU36
 161 008e A9EB0403 		sub	r3, r9, r4
 162 0092 9AB2     		uxth	r2, r3
 163 0094 1346     		mov	r3, r2
 164 0096 3246     		mov	r2, r6
 165 0098 5146     		mov	r1, r10
 166 009a 0493     		str	r3, [sp, #16]
 167 009c 1846     		mov	r0, r3
 168 009e FFF7FEFF 		bl	ILI9341_Draw_Pixel
 169              	.LVL18:
  67:Core/Src/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X - x, Y - y, Colour);
 170              		.loc 1 67 9 view .LVU37
 171 00a2 A9EB050A 		sub	r10, r9, r5
 172 00a6 1FFA8AFA 		uxth	r10, r10
 173 00aa 3246     		mov	r2, r6
 174 00ac 5946     		mov	r1, fp
 175 00ae 5046     		mov	r0, r10
 176 00b0 FFF7FEFF 		bl	ILI9341_Draw_Pixel
 177              	.LVL19:
  68:Core/Src/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X - y, Y - x, Colour);
 178              		.loc 1 68 9 view .LVU38
 179 00b4 A8EB0404 		sub	r4, r8, r4
 180 00b8 A4B2     		uxth	r4, r4
 181 00ba 3246     		mov	r2, r6
 182 00bc 2146     		mov	r1, r4
 183 00be 5046     		mov	r0, r10
 184 00c0 FFF7FEFF 		bl	ILI9341_Draw_Pixel
 185              	.LVL20:
  69:Core/Src/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X + y, Y - x, Colour);
 186              		.loc 1 69 9 view .LVU39
 187 00c4 A8EB0505 		sub	r5, r8, r5
 188 00c8 ADB2     		uxth	r5, r5
 189 00ca 3246     		mov	r2, r6
 190 00cc 2946     		mov	r1, r5
 191 00ce 0498     		ldr	r0, [sp, #16]
 192 00d0 FFF7FEFF 		bl	ILI9341_Draw_Pixel
 193              	.LVL21:
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 6


  70:Core/Src/ILI9341_GFX.c ****         ILI9341_Draw_Pixel(X + x, Y - y, Colour);
 194              		.loc 1 70 9 view .LVU40
 195 00d4 3246     		mov	r2, r6
 196 00d6 2946     		mov	r1, r5
 197 00d8 0398     		ldr	r0, [sp, #12]
 198 00da FFF7FEFF 		bl	ILI9341_Draw_Pixel
 199              	.LVL22:
  71:Core/Src/ILI9341_GFX.c **** 
 200              		.loc 1 71 9 view .LVU41
 201 00de 3246     		mov	r2, r6
 202 00e0 2146     		mov	r1, r4
 203 00e2 0298     		ldr	r0, [sp, #8]
 204 00e4 FFF7FEFF 		bl	ILI9341_Draw_Pixel
 205              	.LVL23:
  73:Core/Src/ILI9341_GFX.c ****         {
 206              		.loc 1 73 9 view .LVU42
  73:Core/Src/ILI9341_GFX.c ****         {
 207              		.loc 1 73 12 is_stmt 0 view .LVU43
 208 00e8 002F     		cmp	r7, #0
 209 00ea 9CDD     		ble	.L8
 210              	.L3:
  79:Core/Src/ILI9341_GFX.c ****         {
 211              		.loc 1 79 9 is_stmt 1 view .LVU44
  79:Core/Src/ILI9341_GFX.c ****         {
 212              		.loc 1 79 12 is_stmt 0 view .LVU45
 213 00ec 002F     		cmp	r7, #0
 214 00ee A2DC     		bgt	.L9
  79:Core/Src/ILI9341_GFX.c ****         {
 215              		.loc 1 79 12 view .LVU46
 216 00f0 ABE7     		b	.L2
 217              	.LVL24:
 218              	.L7:
  84:Core/Src/ILI9341_GFX.c ****         }
  85:Core/Src/ILI9341_GFX.c ****     }
  86:Core/Src/ILI9341_GFX.c **** }
 219              		.loc 1 86 1 view .LVU47
 220 00f2 09B0     		add	sp, sp, #36
 221              	.LCFI2:
 222              		.cfi_def_cfa_offset 36
 223              		@ sp needed
 224 00f4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 225              		.loc 1 86 1 view .LVU48
 226              		.cfi_endproc
 227              	.LFE137:
 229              		.section	.text.ILI9341_Draw_Filled_Circle,"ax",%progbits
 230              		.align	1
 231              		.global	ILI9341_Draw_Filled_Circle
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 236              	ILI9341_Draw_Filled_Circle:
 237              	.LVL25:
 238              	.LFB138:
  87:Core/Src/ILI9341_GFX.c **** 
  88:Core/Src/ILI9341_GFX.c **** /*Draw filled circle at X,Y location with specified radius and colour. X and Y represent circles ce
  89:Core/Src/ILI9341_GFX.c **** void ILI9341_Draw_Filled_Circle(uint16_t X, uint16_t Y, uint16_t Radius, uint16_t Colour)
  90:Core/Src/ILI9341_GFX.c **** {
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 7


 239              		.loc 1 90 1 is_stmt 1 view -0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 16
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              		.loc 1 90 1 is_stmt 0 view .LVU50
 244 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 245              	.LCFI3:
 246              		.cfi_def_cfa_offset 36
 247              		.cfi_offset 4, -36
 248              		.cfi_offset 5, -32
 249              		.cfi_offset 6, -28
 250              		.cfi_offset 7, -24
 251              		.cfi_offset 8, -20
 252              		.cfi_offset 9, -16
 253              		.cfi_offset 10, -12
 254              		.cfi_offset 11, -8
 255              		.cfi_offset 14, -4
 256 0004 85B0     		sub	sp, sp, #20
 257              	.LCFI4:
 258              		.cfi_def_cfa_offset 56
 259 0006 8246     		mov	r10, r0
 260 0008 0F46     		mov	r7, r1
 261 000a 1E46     		mov	r6, r3
  91:Core/Src/ILI9341_GFX.c **** 	
  92:Core/Src/ILI9341_GFX.c **** 		int x = Radius;
 262              		.loc 1 92 3 is_stmt 1 view .LVU51
 263              		.loc 1 92 7 is_stmt 0 view .LVU52
 264 000c 9146     		mov	r9, r2
 265              	.LVL26:
  93:Core/Src/ILI9341_GFX.c ****     int y = 0;
 266              		.loc 1 93 5 is_stmt 1 view .LVU53
  94:Core/Src/ILI9341_GFX.c ****     int xChange = 1 - (Radius << 1);
 267              		.loc 1 94 5 view .LVU54
 268              		.loc 1 94 31 is_stmt 0 view .LVU55
 269 000e 5200     		lsls	r2, r2, #1
 270              	.LVL27:
 271              		.loc 1 94 9 view .LVU56
 272 0010 C2F10103 		rsb	r3, r2, #1
 273              	.LVL28:
 274              		.loc 1 94 9 view .LVU57
 275 0014 0393     		str	r3, [sp, #12]
 276              	.LVL29:
  95:Core/Src/ILI9341_GFX.c ****     int yChange = 0;
 277              		.loc 1 95 5 is_stmt 1 view .LVU58
  96:Core/Src/ILI9341_GFX.c ****     int radiusError = 0;
 278              		.loc 1 96 5 view .LVU59
  97:Core/Src/ILI9341_GFX.c **** 
  98:Core/Src/ILI9341_GFX.c ****     while (x >= y)
 279              		.loc 1 98 5 view .LVU60
  96:Core/Src/ILI9341_GFX.c ****     int radiusError = 0;
 280              		.loc 1 96 9 is_stmt 0 view .LVU61
 281 0016 0023     		movs	r3, #0
 282              	.LVL30:
  96:Core/Src/ILI9341_GFX.c ****     int radiusError = 0;
 283              		.loc 1 96 9 view .LVU62
 284 0018 0193     		str	r3, [sp, #4]
  95:Core/Src/ILI9341_GFX.c ****     int radiusError = 0;
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 8


 285              		.loc 1 95 9 view .LVU63
 286 001a 0293     		str	r3, [sp, #8]
  93:Core/Src/ILI9341_GFX.c ****     int xChange = 1 - (Radius << 1);
 287              		.loc 1 93 9 view .LVU64
 288 001c 9846     		mov	r8, r3
 289              		.loc 1 98 11 view .LVU65
 290 001e 41E0     		b	.L11
 291              	.LVL31:
 292              	.L13:
 293              	.LBB2:
  99:Core/Src/ILI9341_GFX.c ****     {
 100:Core/Src/ILI9341_GFX.c ****         for (int i = X - x; i <= X + x; i++)
 101:Core/Src/ILI9341_GFX.c ****         {
 102:Core/Src/ILI9341_GFX.c ****             ILI9341_Draw_Pixel(i, Y + y,Colour);
 294              		.loc 1 102 13 is_stmt 1 discriminator 3 view .LVU66
 295 0020 1FFA85FB 		uxth	fp, r5
 296 0024 1FFA88F4 		uxth	r4, r8
 297 0028 E119     		adds	r1, r4, r7
 298 002a 3246     		mov	r2, r6
 299 002c 89B2     		uxth	r1, r1
 300 002e 5846     		mov	r0, fp
 301 0030 FFF7FEFF 		bl	ILI9341_Draw_Pixel
 302              	.LVL32:
 103:Core/Src/ILI9341_GFX.c ****             ILI9341_Draw_Pixel(i, Y - y,Colour);
 303              		.loc 1 103 13 discriminator 3 view .LVU67
 304 0034 391B     		subs	r1, r7, r4
 305 0036 3246     		mov	r2, r6
 306 0038 89B2     		uxth	r1, r1
 307 003a 5846     		mov	r0, fp
 308 003c FFF7FEFF 		bl	ILI9341_Draw_Pixel
 309              	.LVL33:
 100:Core/Src/ILI9341_GFX.c ****         {
 310              		.loc 1 100 41 discriminator 3 view .LVU68
 100:Core/Src/ILI9341_GFX.c ****         {
 311              		.loc 1 100 42 is_stmt 0 discriminator 3 view .LVU69
 312 0040 0135     		adds	r5, r5, #1
 313              	.LVL34:
 314              	.L12:
 100:Core/Src/ILI9341_GFX.c ****         {
 315              		.loc 1 100 29 is_stmt 1 discriminator 1 view .LVU70
 100:Core/Src/ILI9341_GFX.c ****         {
 316              		.loc 1 100 36 is_stmt 0 discriminator 1 view .LVU71
 317 0042 0AEB0903 		add	r3, r10, r9
 100:Core/Src/ILI9341_GFX.c ****         {
 318              		.loc 1 100 9 discriminator 1 view .LVU72
 319 0046 AB42     		cmp	r3, r5
 320 0048 EADA     		bge	.L13
 100:Core/Src/ILI9341_GFX.c ****         {
 321              		.loc 1 100 9 discriminator 1 view .LVU73
 322              	.LBE2:
 104:Core/Src/ILI9341_GFX.c ****         }
 105:Core/Src/ILI9341_GFX.c ****         for (int i = X - y; i <= X + y; i++)
 323              		.loc 1 105 9 is_stmt 1 view .LVU74
 324              	.LBB3:
 325              		.loc 1 105 14 view .LVU75
 326              		.loc 1 105 18 is_stmt 0 view .LVU76
 327 004a AAEB0805 		sub	r5, r10, r8
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 9


 328              	.LVL35:
 329              		.loc 1 105 9 view .LVU77
 330 004e 10E0     		b	.L14
 331              	.L15:
 106:Core/Src/ILI9341_GFX.c ****         {
 107:Core/Src/ILI9341_GFX.c ****             ILI9341_Draw_Pixel(i, Y + x,Colour);
 332              		.loc 1 107 13 is_stmt 1 discriminator 3 view .LVU78
 333 0050 1FFA85FB 		uxth	fp, r5
 334 0054 1FFA89F4 		uxth	r4, r9
 335 0058 E119     		adds	r1, r4, r7
 336 005a 3246     		mov	r2, r6
 337 005c 89B2     		uxth	r1, r1
 338 005e 5846     		mov	r0, fp
 339 0060 FFF7FEFF 		bl	ILI9341_Draw_Pixel
 340              	.LVL36:
 108:Core/Src/ILI9341_GFX.c ****             ILI9341_Draw_Pixel(i, Y - x,Colour);
 341              		.loc 1 108 13 discriminator 3 view .LVU79
 342 0064 391B     		subs	r1, r7, r4
 343 0066 3246     		mov	r2, r6
 344 0068 89B2     		uxth	r1, r1
 345 006a 5846     		mov	r0, fp
 346 006c FFF7FEFF 		bl	ILI9341_Draw_Pixel
 347              	.LVL37:
 105:Core/Src/ILI9341_GFX.c ****         {
 348              		.loc 1 105 41 discriminator 3 view .LVU80
 105:Core/Src/ILI9341_GFX.c ****         {
 349              		.loc 1 105 42 is_stmt 0 discriminator 3 view .LVU81
 350 0070 0135     		adds	r5, r5, #1
 351              	.LVL38:
 352              	.L14:
 105:Core/Src/ILI9341_GFX.c ****         {
 353              		.loc 1 105 29 is_stmt 1 discriminator 1 view .LVU82
 105:Core/Src/ILI9341_GFX.c ****         {
 354              		.loc 1 105 36 is_stmt 0 discriminator 1 view .LVU83
 355 0072 0AEB0803 		add	r3, r10, r8
 105:Core/Src/ILI9341_GFX.c ****         {
 356              		.loc 1 105 9 discriminator 1 view .LVU84
 357 0076 AB42     		cmp	r3, r5
 358 0078 EADA     		bge	.L15
 105:Core/Src/ILI9341_GFX.c ****         {
 359              		.loc 1 105 9 discriminator 1 view .LVU85
 360              	.LBE3:
 109:Core/Src/ILI9341_GFX.c ****         }
 110:Core/Src/ILI9341_GFX.c **** 
 111:Core/Src/ILI9341_GFX.c ****         y++;
 361              		.loc 1 111 9 is_stmt 1 view .LVU86
 362              		.loc 1 111 10 is_stmt 0 view .LVU87
 363 007a 08F10108 		add	r8, r8, #1
 364              	.LVL39:
 112:Core/Src/ILI9341_GFX.c ****         radiusError += yChange;
 365              		.loc 1 112 9 is_stmt 1 view .LVU88
 366              		.loc 1 112 21 is_stmt 0 view .LVU89
 367 007e 019B     		ldr	r3, [sp, #4]
 368 0080 029A     		ldr	r2, [sp, #8]
 369 0082 1344     		add	r3, r3, r2
 370 0084 0193     		str	r3, [sp, #4]
 371              	.LVL40:
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 10


 113:Core/Src/ILI9341_GFX.c ****         yChange += 2;
 372              		.loc 1 113 9 is_stmt 1 view .LVU90
 373              		.loc 1 113 17 is_stmt 0 view .LVU91
 374 0086 0232     		adds	r2, r2, #2
 375 0088 0292     		str	r2, [sp, #8]
 376              	.LVL41:
 114:Core/Src/ILI9341_GFX.c ****         if (((radiusError << 1) + xChange) > 0)
 377              		.loc 1 114 9 is_stmt 1 view .LVU92
 378              		.loc 1 114 33 is_stmt 0 view .LVU93
 379 008a 0399     		ldr	r1, [sp, #12]
 380 008c 1A46     		mov	r2, r3
 381              	.LVL42:
 382              		.loc 1 114 33 view .LVU94
 383 008e 01EB4303 		add	r3, r1, r3, lsl #1
 384              	.LVL43:
 385              		.loc 1 114 12 view .LVU95
 386 0092 002B     		cmp	r3, #0
 387 0094 06DD     		ble	.L11
 115:Core/Src/ILI9341_GFX.c ****         {
 116:Core/Src/ILI9341_GFX.c ****             x--;
 388              		.loc 1 116 13 is_stmt 1 view .LVU96
 389              		.loc 1 116 14 is_stmt 0 view .LVU97
 390 0096 09F1FF39 		add	r9, r9, #-1
 391              	.LVL44:
 117:Core/Src/ILI9341_GFX.c ****             radiusError += xChange;
 392              		.loc 1 117 13 is_stmt 1 view .LVU98
 393              		.loc 1 117 25 is_stmt 0 view .LVU99
 394 009a 1346     		mov	r3, r2
 395 009c 0B44     		add	r3, r3, r1
 396 009e 0193     		str	r3, [sp, #4]
 397              	.LVL45:
 118:Core/Src/ILI9341_GFX.c ****             xChange += 2;
 398              		.loc 1 118 13 is_stmt 1 view .LVU100
 399              		.loc 1 118 21 is_stmt 0 view .LVU101
 400 00a0 8B1C     		adds	r3, r1, #2
 401              	.LVL46:
 402              		.loc 1 118 21 view .LVU102
 403 00a2 0393     		str	r3, [sp, #12]
 404              	.LVL47:
 405              	.L11:
  98:Core/Src/ILI9341_GFX.c ****     {
 406              		.loc 1 98 11 is_stmt 1 view .LVU103
 407 00a4 C145     		cmp	r9, r8
 408 00a6 02DB     		blt	.L19
 100:Core/Src/ILI9341_GFX.c ****         {
 409              		.loc 1 100 9 view .LVU104
 410              	.LBB4:
 100:Core/Src/ILI9341_GFX.c ****         {
 411              		.loc 1 100 14 view .LVU105
 100:Core/Src/ILI9341_GFX.c ****         {
 412              		.loc 1 100 18 is_stmt 0 view .LVU106
 413 00a8 AAEB0905 		sub	r5, r10, r9
 414              	.LVL48:
 100:Core/Src/ILI9341_GFX.c ****         {
 415              		.loc 1 100 9 view .LVU107
 416 00ac C9E7     		b	.L12
 417              	.LVL49:
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 11


 418              	.L19:
 100:Core/Src/ILI9341_GFX.c ****         {
 419              		.loc 1 100 9 view .LVU108
 420              	.LBE4:
 119:Core/Src/ILI9341_GFX.c ****         }
 120:Core/Src/ILI9341_GFX.c ****     }
 121:Core/Src/ILI9341_GFX.c **** 		//Really slow implementation, will require future overhaul
 122:Core/Src/ILI9341_GFX.c **** 		//TODO:	https://stackoverflow.com/questions/1201200/fast-algorithm-for-drawing-filled-circles	
 123:Core/Src/ILI9341_GFX.c **** }
 421              		.loc 1 123 1 view .LVU109
 422 00ae 05B0     		add	sp, sp, #20
 423              	.LCFI5:
 424              		.cfi_def_cfa_offset 36
 425              		@ sp needed
 426 00b0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 427              		.loc 1 123 1 view .LVU110
 428              		.cfi_endproc
 429              	.LFE138:
 431              		.section	.text.ILI9341_Draw_Hollow_Rectangle_Coord,"ax",%progbits
 432              		.align	1
 433              		.global	ILI9341_Draw_Hollow_Rectangle_Coord
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 438              	ILI9341_Draw_Hollow_Rectangle_Coord:
 439              	.LVL50:
 440              	.LFB139:
 124:Core/Src/ILI9341_GFX.c **** 
 125:Core/Src/ILI9341_GFX.c **** /*Draw a hollow rectangle between positions X0,Y0 and X1,Y1 with specified colour*/
 126:Core/Src/ILI9341_GFX.c **** void ILI9341_Draw_Hollow_Rectangle_Coord(uint16_t X0, uint16_t Y0, uint16_t X1, uint16_t Y1, uint16
 127:Core/Src/ILI9341_GFX.c **** {
 441              		.loc 1 127 1 is_stmt 1 view -0
 442              		.cfi_startproc
 443              		@ args = 4, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445              		.loc 1 127 1 is_stmt 0 view .LVU112
 446 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 447              	.LCFI6:
 448              		.cfi_def_cfa_offset 32
 449              		.cfi_offset 4, -32
 450              		.cfi_offset 5, -28
 451              		.cfi_offset 6, -24
 452              		.cfi_offset 7, -20
 453              		.cfi_offset 8, -16
 454              		.cfi_offset 9, -12
 455              		.cfi_offset 10, -8
 456              		.cfi_offset 14, -4
 457 0004 0546     		mov	r5, r0
 458 0006 0C46     		mov	r4, r1
 459 0008 1646     		mov	r6, r2
 460 000a 1F46     		mov	r7, r3
 461 000c BDF820A0 		ldrh	r10, [sp, #32]
 128:Core/Src/ILI9341_GFX.c **** 	uint16_t 	X_length = 0;
 462              		.loc 1 128 2 is_stmt 1 view .LVU113
 463              	.LVL51:
 129:Core/Src/ILI9341_GFX.c **** 	uint16_t 	Y_length = 0;
 464              		.loc 1 129 2 view .LVU114
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 12


 130:Core/Src/ILI9341_GFX.c **** 	uint8_t		Negative_X = 0;
 465              		.loc 1 130 2 view .LVU115
 131:Core/Src/ILI9341_GFX.c **** 	uint8_t 	Negative_Y = 0;
 466              		.loc 1 131 2 view .LVU116
 132:Core/Src/ILI9341_GFX.c **** 	float 		Calc_Negative = 0;
 467              		.loc 1 132 2 view .LVU117
 133:Core/Src/ILI9341_GFX.c **** 	
 134:Core/Src/ILI9341_GFX.c **** 	Calc_Negative = X1 - X0;
 468              		.loc 1 134 2 view .LVU118
 469              		.loc 1 134 21 is_stmt 0 view .LVU119
 470 0010 131A     		subs	r3, r2, r0
 471              	.LVL52:
 472              		.loc 1 134 21 view .LVU120
 473 0012 07EE903A 		vmov	s15, r3	@ int
 474              		.loc 1 134 16 view .LVU121
 475 0016 F8EEE77A 		vcvt.f32.s32	s15, s15
 476              	.LVL53:
 135:Core/Src/ILI9341_GFX.c **** 	if(Calc_Negative < 0) Negative_X = 1;
 477              		.loc 1 135 2 is_stmt 1 view .LVU122
 478              		.loc 1 135 4 is_stmt 0 view .LVU123
 479 001a F5EEC07A 		vcmpe.f32	s15, #0
 480 001e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 481 0022 3DD4     		bmi	.L29
 130:Core/Src/ILI9341_GFX.c **** 	uint8_t 	Negative_Y = 0;
 482              		.loc 1 130 11 view .LVU124
 483 0024 0023     		movs	r3, #0
 484              	.L21:
 485              	.LVL54:
 136:Core/Src/ILI9341_GFX.c **** 	Calc_Negative = 0;
 486              		.loc 1 136 2 is_stmt 1 view .LVU125
 137:Core/Src/ILI9341_GFX.c **** 	
 138:Core/Src/ILI9341_GFX.c **** 	Calc_Negative = Y1 - Y0;
 487              		.loc 1 138 2 view .LVU126
 488              		.loc 1 138 21 is_stmt 0 view .LVU127
 489 0026 3A1B     		subs	r2, r7, r4
 490              	.LVL55:
 491              		.loc 1 138 21 view .LVU128
 492 0028 07EE902A 		vmov	s15, r2	@ int
 493              		.loc 1 138 16 view .LVU129
 494 002c F8EEE77A 		vcvt.f32.s32	s15, s15
 495              	.LVL56:
 139:Core/Src/ILI9341_GFX.c **** 	if(Calc_Negative < 0) Negative_Y = 1;
 496              		.loc 1 139 2 is_stmt 1 view .LVU130
 497              		.loc 1 139 4 is_stmt 0 view .LVU131
 498 0030 F5EEC07A 		vcmpe.f32	s15, #0
 499 0034 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 500 0038 34D4     		bmi	.L30
 131:Core/Src/ILI9341_GFX.c **** 	float 		Calc_Negative = 0;
 501              		.loc 1 131 11 view .LVU132
 502 003a 4FF00009 		mov	r9, #0
 503              	.L22:
 504              	.LVL57:
 140:Core/Src/ILI9341_GFX.c **** 	
 141:Core/Src/ILI9341_GFX.c **** 	
 142:Core/Src/ILI9341_GFX.c **** 	//DRAW HORIZONTAL!
 143:Core/Src/ILI9341_GFX.c **** 	if(!Negative_X)
 505              		.loc 1 143 2 is_stmt 1 view .LVU133
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 13


 506              		.loc 1 143 4 is_stmt 0 view .LVU134
 507 003e A3BB     		cbnz	r3, .L23
 144:Core/Src/ILI9341_GFX.c **** 	{
 145:Core/Src/ILI9341_GFX.c **** 		X_length = X1 - X0;		
 508              		.loc 1 145 3 is_stmt 1 view .LVU135
 509              		.loc 1 145 12 is_stmt 0 view .LVU136
 510 0040 A6EB0508 		sub	r8, r6, r5
 511 0044 1FFA88F8 		uxth	r8, r8
 512              	.LVL58:
 513              	.L24:
 146:Core/Src/ILI9341_GFX.c **** 	}
 147:Core/Src/ILI9341_GFX.c **** 	else
 148:Core/Src/ILI9341_GFX.c **** 	{
 149:Core/Src/ILI9341_GFX.c **** 		X_length = X0 - X1;		
 150:Core/Src/ILI9341_GFX.c **** 	}
 151:Core/Src/ILI9341_GFX.c **** 	ILI9341_Draw_Horizontal_Line(X0, Y0, X_length, Colour);
 514              		.loc 1 151 2 is_stmt 1 view .LVU137
 515 0048 5346     		mov	r3, r10
 516              	.LVL59:
 517              		.loc 1 151 2 is_stmt 0 view .LVU138
 518 004a 4246     		mov	r2, r8
 519 004c 2146     		mov	r1, r4
 520              	.LVL60:
 521              		.loc 1 151 2 view .LVU139
 522 004e 2846     		mov	r0, r5
 523              	.LVL61:
 524              		.loc 1 151 2 view .LVU140
 525 0050 FFF7FEFF 		bl	ILI9341_Draw_Horizontal_Line
 526              	.LVL62:
 152:Core/Src/ILI9341_GFX.c **** 	ILI9341_Draw_Horizontal_Line(X0, Y1, X_length, Colour);
 527              		.loc 1 152 2 is_stmt 1 view .LVU141
 528 0054 5346     		mov	r3, r10
 529 0056 4246     		mov	r2, r8
 530 0058 3946     		mov	r1, r7
 531 005a 2846     		mov	r0, r5
 532 005c FFF7FEFF 		bl	ILI9341_Draw_Horizontal_Line
 533              	.LVL63:
 153:Core/Src/ILI9341_GFX.c **** 	
 154:Core/Src/ILI9341_GFX.c **** 	
 155:Core/Src/ILI9341_GFX.c **** 	
 156:Core/Src/ILI9341_GFX.c **** 	//DRAW VERTICAL!
 157:Core/Src/ILI9341_GFX.c **** 	if(!Negative_Y)
 534              		.loc 1 157 2 view .LVU142
 535              		.loc 1 157 4 is_stmt 0 view .LVU143
 536 0060 B9F1000F 		cmp	r9, #0
 537 0064 26D1     		bne	.L25
 158:Core/Src/ILI9341_GFX.c **** 	{
 159:Core/Src/ILI9341_GFX.c **** 		Y_length = Y1 - Y0;		
 538              		.loc 1 159 3 is_stmt 1 view .LVU144
 539              		.loc 1 159 12 is_stmt 0 view .LVU145
 540 0066 A7EB0409 		sub	r9, r7, r4
 541              	.LVL64:
 542              		.loc 1 159 12 view .LVU146
 543 006a 1FFA89F9 		uxth	r9, r9
 544              	.LVL65:
 545              	.L26:
 160:Core/Src/ILI9341_GFX.c **** 	}
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 14


 161:Core/Src/ILI9341_GFX.c **** 	else
 162:Core/Src/ILI9341_GFX.c **** 	{
 163:Core/Src/ILI9341_GFX.c **** 		Y_length = Y0 - Y1;		
 164:Core/Src/ILI9341_GFX.c **** 	}
 165:Core/Src/ILI9341_GFX.c **** 	ILI9341_Draw_Vertical_Line(X0, Y0, Y_length, Colour);
 546              		.loc 1 165 2 is_stmt 1 view .LVU147
 547 006e 5346     		mov	r3, r10
 548 0070 4A46     		mov	r2, r9
 549 0072 2146     		mov	r1, r4
 550 0074 2846     		mov	r0, r5
 551 0076 FFF7FEFF 		bl	ILI9341_Draw_Vertical_Line
 552              	.LVL66:
 166:Core/Src/ILI9341_GFX.c **** 	ILI9341_Draw_Vertical_Line(X1, Y0, Y_length, Colour);
 553              		.loc 1 166 2 view .LVU148
 554 007a 5346     		mov	r3, r10
 555 007c 4A46     		mov	r2, r9
 556 007e 2146     		mov	r1, r4
 557 0080 3046     		mov	r0, r6
 558 0082 FFF7FEFF 		bl	ILI9341_Draw_Vertical_Line
 559              	.LVL67:
 167:Core/Src/ILI9341_GFX.c **** 	
 168:Core/Src/ILI9341_GFX.c **** 	if((X_length > 0)||(Y_length > 0)) 
 560              		.loc 1 168 2 view .LVU149
 561              		.loc 1 168 4 is_stmt 0 view .LVU150
 562 0086 B8F1000F 		cmp	r8, #0
 563 008a 02D1     		bne	.L27
 564              		.loc 1 168 19 discriminator 1 view .LVU151
 565 008c B9F1000F 		cmp	r9, #0
 566 0090 04D0     		beq	.L20
 567              	.L27:
 169:Core/Src/ILI9341_GFX.c **** 	{
 170:Core/Src/ILI9341_GFX.c **** 		ILI9341_Draw_Pixel(X1, Y1, Colour);
 568              		.loc 1 170 3 is_stmt 1 view .LVU152
 569 0092 5246     		mov	r2, r10
 570 0094 3946     		mov	r1, r7
 571 0096 3046     		mov	r0, r6
 572 0098 FFF7FEFF 		bl	ILI9341_Draw_Pixel
 573              	.LVL68:
 574              	.L20:
 171:Core/Src/ILI9341_GFX.c **** 	}
 172:Core/Src/ILI9341_GFX.c **** 	
 173:Core/Src/ILI9341_GFX.c **** }
 575              		.loc 1 173 1 is_stmt 0 view .LVU153
 576 009c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 577              	.LVL69:
 578              	.L29:
 135:Core/Src/ILI9341_GFX.c **** 	Calc_Negative = 0;
 579              		.loc 1 135 35 view .LVU154
 580 00a0 0123     		movs	r3, #1
 581 00a2 C0E7     		b	.L21
 582              	.LVL70:
 583              	.L30:
 139:Core/Src/ILI9341_GFX.c **** 	
 584              		.loc 1 139 35 view .LVU155
 585 00a4 4FF00109 		mov	r9, #1
 586 00a8 C9E7     		b	.L22
 587              	.LVL71:
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 15


 588              	.L23:
 149:Core/Src/ILI9341_GFX.c **** 	}
 589              		.loc 1 149 3 is_stmt 1 view .LVU156
 149:Core/Src/ILI9341_GFX.c **** 	}
 590              		.loc 1 149 12 is_stmt 0 view .LVU157
 591 00aa A5EB0608 		sub	r8, r5, r6
 592 00ae 1FFA88F8 		uxth	r8, r8
 593              	.LVL72:
 149:Core/Src/ILI9341_GFX.c **** 	}
 594              		.loc 1 149 12 view .LVU158
 595 00b2 C9E7     		b	.L24
 596              	.LVL73:
 597              	.L25:
 163:Core/Src/ILI9341_GFX.c **** 	}
 598              		.loc 1 163 3 is_stmt 1 view .LVU159
 163:Core/Src/ILI9341_GFX.c **** 	}
 599              		.loc 1 163 12 is_stmt 0 view .LVU160
 600 00b4 A4EB0709 		sub	r9, r4, r7
 601              	.LVL74:
 163:Core/Src/ILI9341_GFX.c **** 	}
 602              		.loc 1 163 12 view .LVU161
 603 00b8 1FFA89F9 		uxth	r9, r9
 604              	.LVL75:
 163:Core/Src/ILI9341_GFX.c **** 	}
 605              		.loc 1 163 12 view .LVU162
 606 00bc D7E7     		b	.L26
 607              		.cfi_endproc
 608              	.LFE139:
 610              		.section	.text.ILI9341_Draw_Filled_Rectangle_Coord,"ax",%progbits
 611              		.align	1
 612              		.global	ILI9341_Draw_Filled_Rectangle_Coord
 613              		.syntax unified
 614              		.thumb
 615              		.thumb_func
 617              	ILI9341_Draw_Filled_Rectangle_Coord:
 618              	.LVL76:
 619              	.LFB140:
 174:Core/Src/ILI9341_GFX.c **** 
 175:Core/Src/ILI9341_GFX.c **** /*Draw a filled rectangle between positions X0,Y0 and X1,Y1 with specified colour*/
 176:Core/Src/ILI9341_GFX.c **** void ILI9341_Draw_Filled_Rectangle_Coord(uint16_t X0, uint16_t Y0, uint16_t X1, uint16_t Y1, uint16
 177:Core/Src/ILI9341_GFX.c **** {
 620              		.loc 1 177 1 is_stmt 1 view -0
 621              		.cfi_startproc
 622              		@ args = 4, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              		.loc 1 177 1 is_stmt 0 view .LVU164
 625 0000 10B5     		push	{r4, lr}
 626              	.LCFI7:
 627              		.cfi_def_cfa_offset 8
 628              		.cfi_offset 4, -8
 629              		.cfi_offset 14, -4
 630 0002 82B0     		sub	sp, sp, #8
 631              	.LCFI8:
 632              		.cfi_def_cfa_offset 16
 633 0004 9646     		mov	lr, r2
 634 0006 9C46     		mov	ip, r3
 178:Core/Src/ILI9341_GFX.c **** 	uint16_t 	X_length = 0;
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 16


 635              		.loc 1 178 2 is_stmt 1 view .LVU165
 636              	.LVL77:
 179:Core/Src/ILI9341_GFX.c **** 	uint16_t 	Y_length = 0;
 637              		.loc 1 179 2 view .LVU166
 180:Core/Src/ILI9341_GFX.c **** 	uint8_t		Negative_X = 0;
 638              		.loc 1 180 2 view .LVU167
 181:Core/Src/ILI9341_GFX.c **** 	uint8_t 	Negative_Y = 0;
 639              		.loc 1 181 2 view .LVU168
 182:Core/Src/ILI9341_GFX.c **** 	int32_t 	Calc_Negative = 0;
 640              		.loc 1 182 2 view .LVU169
 183:Core/Src/ILI9341_GFX.c **** 	
 184:Core/Src/ILI9341_GFX.c **** 	uint16_t X0_true = 0;
 641              		.loc 1 184 2 view .LVU170
 185:Core/Src/ILI9341_GFX.c **** 	uint16_t Y0_true = 0;
 642              		.loc 1 185 2 view .LVU171
 186:Core/Src/ILI9341_GFX.c **** 	
 187:Core/Src/ILI9341_GFX.c **** 	Calc_Negative = X1 - X0;
 643              		.loc 1 187 2 view .LVU172
 644              		.loc 1 187 16 is_stmt 0 view .LVU173
 645 0008 131A     		subs	r3, r2, r0
 646              	.LVL78:
 188:Core/Src/ILI9341_GFX.c **** 	if(Calc_Negative < 0) Negative_X = 1;
 647              		.loc 1 188 2 is_stmt 1 view .LVU174
 648              		.loc 1 188 4 is_stmt 0 view .LVU175
 649 000a 002B     		cmp	r3, #0
 650 000c 16DB     		blt	.L39
 180:Core/Src/ILI9341_GFX.c **** 	uint8_t 	Negative_Y = 0;
 651              		.loc 1 180 11 view .LVU176
 652 000e 0022     		movs	r2, #0
 653              	.LVL79:
 654              	.L33:
 189:Core/Src/ILI9341_GFX.c **** 	Calc_Negative = 0;
 655              		.loc 1 189 2 is_stmt 1 view .LVU177
 190:Core/Src/ILI9341_GFX.c **** 	
 191:Core/Src/ILI9341_GFX.c **** 	Calc_Negative = Y1 - Y0;
 656              		.loc 1 191 2 view .LVU178
 657              		.loc 1 191 16 is_stmt 0 view .LVU179
 658 0010 ACEB0103 		sub	r3, ip, r1
 659              	.LVL80:
 192:Core/Src/ILI9341_GFX.c **** 	if(Calc_Negative < 0) Negative_Y = 1;
 660              		.loc 1 192 2 is_stmt 1 view .LVU180
 661              		.loc 1 192 4 is_stmt 0 view .LVU181
 662 0014 002B     		cmp	r3, #0
 663 0016 13DB     		blt	.L40
 181:Core/Src/ILI9341_GFX.c **** 	int32_t 	Calc_Negative = 0;
 664              		.loc 1 181 11 view .LVU182
 665 0018 0023     		movs	r3, #0
 666              	.LVL81:
 667              	.L34:
 193:Core/Src/ILI9341_GFX.c **** 	
 194:Core/Src/ILI9341_GFX.c **** 	
 195:Core/Src/ILI9341_GFX.c **** 	//DRAW HORIZONTAL!
 196:Core/Src/ILI9341_GFX.c **** 	if(!Negative_X)
 668              		.loc 1 196 2 is_stmt 1 view .LVU183
 669              		.loc 1 196 4 is_stmt 0 view .LVU184
 670 001a 9AB9     		cbnz	r2, .L35
 197:Core/Src/ILI9341_GFX.c **** 	{
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 17


 198:Core/Src/ILI9341_GFX.c **** 		X_length = X1 - X0;
 671              		.loc 1 198 3 is_stmt 1 view .LVU185
 672              		.loc 1 198 12 is_stmt 0 view .LVU186
 673 001c AEEB000E 		sub	lr, lr, r0
 674 0020 1FFA8EF2 		uxth	r2, lr
 675              	.LVL82:
 199:Core/Src/ILI9341_GFX.c **** 		X0_true = X0;
 676              		.loc 1 199 3 is_stmt 1 view .LVU187
 677              	.L36:
 200:Core/Src/ILI9341_GFX.c **** 	}
 201:Core/Src/ILI9341_GFX.c **** 	else
 202:Core/Src/ILI9341_GFX.c **** 	{
 203:Core/Src/ILI9341_GFX.c **** 		X_length = X0 - X1;
 204:Core/Src/ILI9341_GFX.c **** 		X0_true = X1;
 205:Core/Src/ILI9341_GFX.c **** 	}
 206:Core/Src/ILI9341_GFX.c **** 	
 207:Core/Src/ILI9341_GFX.c **** 	//DRAW VERTICAL!
 208:Core/Src/ILI9341_GFX.c **** 	if(!Negative_Y)
 678              		.loc 1 208 2 view .LVU188
 679              		.loc 1 208 4 is_stmt 0 view .LVU189
 680 0024 9BB9     		cbnz	r3, .L37
 209:Core/Src/ILI9341_GFX.c **** 	{
 210:Core/Src/ILI9341_GFX.c **** 		Y_length = Y1 - Y0;
 681              		.loc 1 210 3 is_stmt 1 view .LVU190
 682              		.loc 1 210 12 is_stmt 0 view .LVU191
 683 0026 ACEB010C 		sub	ip, ip, r1
 684              	.LVL83:
 685              		.loc 1 210 12 view .LVU192
 686 002a 1FFA8CF3 		uxth	r3, ip
 687              	.LVL84:
 211:Core/Src/ILI9341_GFX.c **** 		Y0_true = Y0;		
 688              		.loc 1 211 3 is_stmt 1 view .LVU193
 689              	.L38:
 212:Core/Src/ILI9341_GFX.c **** 	}
 213:Core/Src/ILI9341_GFX.c **** 	else
 214:Core/Src/ILI9341_GFX.c **** 	{
 215:Core/Src/ILI9341_GFX.c **** 		Y_length = Y0 - Y1;
 216:Core/Src/ILI9341_GFX.c **** 		Y0_true = Y1;	
 217:Core/Src/ILI9341_GFX.c **** 	}
 218:Core/Src/ILI9341_GFX.c **** 	
 219:Core/Src/ILI9341_GFX.c **** 	ILI9341_Draw_Rectangle(X0_true, Y0_true, X_length, Y_length, Colour);	
 690              		.loc 1 219 2 view .LVU194
 691 002e BDF81040 		ldrh	r4, [sp, #16]
 692 0032 0094     		str	r4, [sp]
 693 0034 FFF7FEFF 		bl	ILI9341_Draw_Rectangle
 694              	.LVL85:
 220:Core/Src/ILI9341_GFX.c **** }
 695              		.loc 1 220 1 is_stmt 0 view .LVU195
 696 0038 02B0     		add	sp, sp, #8
 697              	.LCFI9:
 698              		.cfi_remember_state
 699              		.cfi_def_cfa_offset 8
 700              		@ sp needed
 701 003a 10BD     		pop	{r4, pc}
 702              	.LVL86:
 703              	.L39:
 704              	.LCFI10:
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 18


 705              		.cfi_restore_state
 188:Core/Src/ILI9341_GFX.c **** 	Calc_Negative = 0;
 706              		.loc 1 188 35 view .LVU196
 707 003c 0122     		movs	r2, #1
 708              	.LVL87:
 188:Core/Src/ILI9341_GFX.c **** 	Calc_Negative = 0;
 709              		.loc 1 188 35 view .LVU197
 710 003e E7E7     		b	.L33
 711              	.LVL88:
 712              	.L40:
 192:Core/Src/ILI9341_GFX.c **** 	
 713              		.loc 1 192 35 view .LVU198
 714 0040 0123     		movs	r3, #1
 715              	.LVL89:
 192:Core/Src/ILI9341_GFX.c **** 	
 716              		.loc 1 192 35 view .LVU199
 717 0042 EAE7     		b	.L34
 718              	.LVL90:
 719              	.L35:
 203:Core/Src/ILI9341_GFX.c **** 		X0_true = X1;
 720              		.loc 1 203 3 is_stmt 1 view .LVU200
 203:Core/Src/ILI9341_GFX.c **** 		X0_true = X1;
 721              		.loc 1 203 12 is_stmt 0 view .LVU201
 722 0044 A0EB0E00 		sub	r0, r0, lr
 723              	.LVL91:
 203:Core/Src/ILI9341_GFX.c **** 		X0_true = X1;
 724              		.loc 1 203 12 view .LVU202
 725 0048 82B2     		uxth	r2, r0
 726              	.LVL92:
 204:Core/Src/ILI9341_GFX.c **** 	}
 727              		.loc 1 204 3 is_stmt 1 view .LVU203
 204:Core/Src/ILI9341_GFX.c **** 	}
 728              		.loc 1 204 11 is_stmt 0 view .LVU204
 729 004a 7046     		mov	r0, lr
 730 004c EAE7     		b	.L36
 731              	.LVL93:
 732              	.L37:
 215:Core/Src/ILI9341_GFX.c **** 		Y0_true = Y1;	
 733              		.loc 1 215 3 is_stmt 1 view .LVU205
 215:Core/Src/ILI9341_GFX.c **** 		Y0_true = Y1;	
 734              		.loc 1 215 12 is_stmt 0 view .LVU206
 735 004e A1EB0C01 		sub	r1, r1, ip
 736              	.LVL94:
 215:Core/Src/ILI9341_GFX.c **** 		Y0_true = Y1;	
 737              		.loc 1 215 12 view .LVU207
 738 0052 8BB2     		uxth	r3, r1
 739              	.LVL95:
 216:Core/Src/ILI9341_GFX.c **** 	}
 740              		.loc 1 216 3 is_stmt 1 view .LVU208
 216:Core/Src/ILI9341_GFX.c **** 	}
 741              		.loc 1 216 11 is_stmt 0 view .LVU209
 742 0054 6146     		mov	r1, ip
 743 0056 EAE7     		b	.L38
 744              		.cfi_endproc
 745              	.LFE140:
 747              		.section	.text.ILI9341_Draw_Char,"ax",%progbits
 748              		.align	1
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 19


 749              		.global	ILI9341_Draw_Char
 750              		.syntax unified
 751              		.thumb
 752              		.thumb_func
 754              	ILI9341_Draw_Char:
 755              	.LVL96:
 756              	.LFB141:
 221:Core/Src/ILI9341_GFX.c **** 
 222:Core/Src/ILI9341_GFX.c **** /*Draws a character (fonts imported from fonts.h) at X,Y location with specified font colour, size 
 223:Core/Src/ILI9341_GFX.c **** /*See fonts.h implementation of font on what is required for changing to a different font when swit
 224:Core/Src/ILI9341_GFX.c **** void ILI9341_Draw_Char(char Character, uint8_t X, uint8_t Y, uint16_t Colour, uint16_t Size, uint16
 225:Core/Src/ILI9341_GFX.c **** {
 757              		.loc 1 225 1 is_stmt 1 view -0
 758              		.cfi_startproc
 759              		@ args = 8, pretend = 0, frame = 8
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              		.loc 1 225 1 is_stmt 0 view .LVU211
 762 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 763              	.LCFI11:
 764              		.cfi_def_cfa_offset 28
 765              		.cfi_offset 4, -28
 766              		.cfi_offset 5, -24
 767              		.cfi_offset 6, -20
 768              		.cfi_offset 7, -16
 769              		.cfi_offset 8, -12
 770              		.cfi_offset 9, -8
 771              		.cfi_offset 14, -4
 772 0004 85B0     		sub	sp, sp, #20
 773              	.LCFI12:
 774              		.cfi_def_cfa_offset 48
 775 0006 9946     		mov	r9, r3
 776 0008 BDF83060 		ldrh	r6, [sp, #48]
 226:Core/Src/ILI9341_GFX.c **** 		uint8_t 	function_char;
 777              		.loc 1 226 3 is_stmt 1 view .LVU212
 227:Core/Src/ILI9341_GFX.c ****     uint8_t 	i,j;
 778              		.loc 1 227 5 view .LVU213
 228:Core/Src/ILI9341_GFX.c **** 		
 229:Core/Src/ILI9341_GFX.c **** 		function_char = Character;
 779              		.loc 1 229 3 view .LVU214
 780              	.LVL97:
 230:Core/Src/ILI9341_GFX.c **** 		
 231:Core/Src/ILI9341_GFX.c ****     if (function_char < ' ') {
 781              		.loc 1 231 5 view .LVU215
 782              		.loc 1 231 8 is_stmt 0 view .LVU216
 783 000c 1F28     		cmp	r0, #31
 784 000e 01D9     		bls	.L43
 232:Core/Src/ILI9341_GFX.c ****         Character = 0;
 233:Core/Src/ILI9341_GFX.c ****     } else {
 234:Core/Src/ILI9341_GFX.c ****         function_char -= 32;
 785              		.loc 1 234 9 is_stmt 1 view .LVU217
 786              		.loc 1 234 23 is_stmt 0 view .LVU218
 787 0010 2038     		subs	r0, r0, #32
 788              	.LVL98:
 789              		.loc 1 234 23 view .LVU219
 790 0012 C0B2     		uxtb	r0, r0
 791              	.LVL99:
 792              	.L43:
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 20


 235:Core/Src/ILI9341_GFX.c **** 		}
 236:Core/Src/ILI9341_GFX.c ****    	
 237:Core/Src/ILI9341_GFX.c **** 		char temp[CHAR_WIDTH];
 793              		.loc 1 237 3 is_stmt 1 view .LVU220
 238:Core/Src/ILI9341_GFX.c **** 		for(uint8_t k = 0; k<CHAR_WIDTH; k++)
 794              		.loc 1 238 3 view .LVU221
 795              	.LBB5:
 796              		.loc 1 238 7 view .LVU222
 797              		.loc 1 238 15 is_stmt 0 view .LVU223
 798 0014 0023     		movs	r3, #0
 799              	.LVL100:
 800              		.loc 1 238 3 view .LVU224
 801 0016 0CE0     		b	.L44
 802              	.LVL101:
 803              	.L45:
 239:Core/Src/ILI9341_GFX.c **** 		{
 240:Core/Src/ILI9341_GFX.c **** 		temp[k] = font[function_char][k];
 804              		.loc 1 240 3 is_stmt 1 discriminator 3 view .LVU225
 805              		.loc 1 240 32 is_stmt 0 discriminator 3 view .LVU226
 806 0018 00EB4004 		add	r4, r0, r0, lsl #1
 807 001c 264D     		ldr	r5, .L56
 808 001e 05EB4404 		add	r4, r5, r4, lsl #1
 809 0022 E55C     		ldrb	r5, [r4, r3]	@ zero_extendqisi2
 810              		.loc 1 240 11 discriminator 3 view .LVU227
 811 0024 03F11004 		add	r4, r3, #16
 812 0028 6C44     		add	r4, sp, r4
 813 002a 04F8085C 		strb	r5, [r4, #-8]
 238:Core/Src/ILI9341_GFX.c **** 		for(uint8_t k = 0; k<CHAR_WIDTH; k++)
 814              		.loc 1 238 36 is_stmt 1 discriminator 3 view .LVU228
 238:Core/Src/ILI9341_GFX.c **** 		for(uint8_t k = 0; k<CHAR_WIDTH; k++)
 815              		.loc 1 238 37 is_stmt 0 discriminator 3 view .LVU229
 816 002e 0133     		adds	r3, r3, #1
 817              	.LVL102:
 238:Core/Src/ILI9341_GFX.c **** 		for(uint8_t k = 0; k<CHAR_WIDTH; k++)
 818              		.loc 1 238 37 discriminator 3 view .LVU230
 819 0030 DBB2     		uxtb	r3, r3
 820              	.LVL103:
 821              	.L44:
 238:Core/Src/ILI9341_GFX.c **** 		for(uint8_t k = 0; k<CHAR_WIDTH; k++)
 822              		.loc 1 238 22 is_stmt 1 discriminator 1 view .LVU231
 238:Core/Src/ILI9341_GFX.c **** 		for(uint8_t k = 0; k<CHAR_WIDTH; k++)
 823              		.loc 1 238 3 is_stmt 0 discriminator 1 view .LVU232
 824 0032 052B     		cmp	r3, #5
 825 0034 F0D9     		bls	.L45
 826              	.LBE5:
 241:Core/Src/ILI9341_GFX.c **** 		}
 242:Core/Src/ILI9341_GFX.c **** 		
 243:Core/Src/ILI9341_GFX.c ****     // Draw pixels
 244:Core/Src/ILI9341_GFX.c **** 		ILI9341_Draw_Rectangle(X, Y, CHAR_WIDTH*Size, CHAR_HEIGHT*Size, Background_Colour);
 827              		.loc 1 244 3 is_stmt 1 view .LVU233
 828 0036 8FB2     		uxth	r7, r1
 829 0038 1FFA82F8 		uxth	r8, r2
 830 003c F300     		lsls	r3, r6, #3
 831              	.LVL104:
 832              		.loc 1 244 3 is_stmt 0 view .LVU234
 833 003e 9BB2     		uxth	r3, r3
 834 0040 06EB4602 		add	r2, r6, r6, lsl #1
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 21


 835              	.LVL105:
 836              		.loc 1 244 3 view .LVU235
 837 0044 5200     		lsls	r2, r2, #1
 838 0046 92B2     		uxth	r2, r2
 839 0048 BDF83410 		ldrh	r1, [sp, #52]
 840              	.LVL106:
 841              		.loc 1 244 3 view .LVU236
 842 004c 0091     		str	r1, [sp]
 843 004e 4146     		mov	r1, r8
 844 0050 3846     		mov	r0, r7
 845              	.LVL107:
 846              		.loc 1 244 3 view .LVU237
 847 0052 FFF7FEFF 		bl	ILI9341_Draw_Rectangle
 848              	.LVL108:
 245:Core/Src/ILI9341_GFX.c ****     for (j=0; j<CHAR_WIDTH; j++) {
 849              		.loc 1 245 5 is_stmt 1 view .LVU238
 850              		.loc 1 245 11 is_stmt 0 view .LVU239
 851 0056 0025     		movs	r5, #0
 852              		.loc 1 245 5 view .LVU240
 853 0058 27E0     		b	.L46
 854              	.LVL109:
 855              	.L54:
 246:Core/Src/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 247:Core/Src/ILI9341_GFX.c ****             if (temp[j] & (1<<i)) {			
 248:Core/Src/ILI9341_GFX.c **** 							if(Size == 1)
 249:Core/Src/ILI9341_GFX.c **** 							{
 250:Core/Src/ILI9341_GFX.c ****               ILI9341_Draw_Pixel(X+j, Y+i, Colour);
 856              		.loc 1 250 15 is_stmt 1 view .LVU241
 857 005a 4A46     		mov	r2, r9
 858 005c 08EB0401 		add	r1, r8, r4
 859 0060 7819     		adds	r0, r7, r5
 860 0062 FFF7FEFF 		bl	ILI9341_Draw_Pixel
 861              	.LVL110:
 862              	.L47:
 246:Core/Src/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 863              		.loc 1 246 34 discriminator 2 view .LVU242
 246:Core/Src/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 864              		.loc 1 246 35 is_stmt 0 discriminator 2 view .LVU243
 865 0066 0134     		adds	r4, r4, #1
 866              	.LVL111:
 246:Core/Src/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 867              		.loc 1 246 35 discriminator 2 view .LVU244
 868 0068 E4B2     		uxtb	r4, r4
 869              	.LVL112:
 870              	.L50:
 246:Core/Src/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 871              		.loc 1 246 19 is_stmt 1 discriminator 1 view .LVU245
 246:Core/Src/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 872              		.loc 1 246 9 is_stmt 0 discriminator 1 view .LVU246
 873 006a 072C     		cmp	r4, #7
 874 006c 1BD8     		bhi	.L53
 247:Core/Src/ILI9341_GFX.c **** 							if(Size == 1)
 875              		.loc 1 247 13 is_stmt 1 view .LVU247
 247:Core/Src/ILI9341_GFX.c **** 							if(Size == 1)
 876              		.loc 1 247 21 is_stmt 0 view .LVU248
 877 006e 05F11003 		add	r3, r5, #16
 878 0072 6B44     		add	r3, sp, r3
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 22


 879 0074 13F8082C 		ldrb	r2, [r3, #-8]	@ zero_extendqisi2
 247:Core/Src/ILI9341_GFX.c **** 							if(Size == 1)
 880              		.loc 1 247 17 view .LVU249
 881 0078 2241     		asrs	r2, r2, r4
 247:Core/Src/ILI9341_GFX.c **** 							if(Size == 1)
 882              		.loc 1 247 16 view .LVU250
 883 007a 12F0010F 		tst	r2, #1
 884 007e F2D0     		beq	.L47
 248:Core/Src/ILI9341_GFX.c **** 							{
 885              		.loc 1 248 8 is_stmt 1 view .LVU251
 248:Core/Src/ILI9341_GFX.c **** 							{
 886              		.loc 1 248 10 is_stmt 0 view .LVU252
 887 0080 012E     		cmp	r6, #1
 888 0082 EAD0     		beq	.L54
 251:Core/Src/ILI9341_GFX.c **** 							}
 252:Core/Src/ILI9341_GFX.c **** 							else
 253:Core/Src/ILI9341_GFX.c **** 							{
 254:Core/Src/ILI9341_GFX.c **** 							ILI9341_Draw_Rectangle(X+(j*Size), Y+(i*Size), Size, Size, Colour);
 889              		.loc 1 254 8 is_stmt 1 view .LVU253
 890              		.loc 1 254 35 is_stmt 0 view .LVU254
 891 0084 15FB06F0 		smulbb	r0, r5, r6
 892              		.loc 1 254 47 view .LVU255
 893 0088 14FB06F1 		smulbb	r1, r4, r6
 894              		.loc 1 254 8 view .LVU256
 895 008c 18FA81F1 		uxtah	r1, r8, r1
 896 0090 17FA80F0 		uxtah	r0, r7, r0
 897 0094 CDF80090 		str	r9, [sp]
 898 0098 3346     		mov	r3, r6
 899 009a 3246     		mov	r2, r6
 900 009c 89B2     		uxth	r1, r1
 901 009e 80B2     		uxth	r0, r0
 902 00a0 FFF7FEFF 		bl	ILI9341_Draw_Rectangle
 903              	.LVL113:
 904 00a4 DFE7     		b	.L47
 905              	.L53:
 245:Core/Src/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 906              		.loc 1 245 29 is_stmt 1 discriminator 2 view .LVU257
 245:Core/Src/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 907              		.loc 1 245 30 is_stmt 0 discriminator 2 view .LVU258
 908 00a6 0135     		adds	r5, r5, #1
 909              	.LVL114:
 245:Core/Src/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 910              		.loc 1 245 30 discriminator 2 view .LVU259
 911 00a8 EDB2     		uxtb	r5, r5
 912              	.LVL115:
 913              	.L46:
 245:Core/Src/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 914              		.loc 1 245 15 is_stmt 1 discriminator 1 view .LVU260
 245:Core/Src/ILI9341_GFX.c ****         for (i=0; i<CHAR_HEIGHT; i++) {
 915              		.loc 1 245 5 is_stmt 0 discriminator 1 view .LVU261
 916 00aa 052D     		cmp	r5, #5
 917 00ac 01D8     		bhi	.L55
 246:Core/Src/ILI9341_GFX.c ****             if (temp[j] & (1<<i)) {			
 918              		.loc 1 246 15 view .LVU262
 919 00ae 0024     		movs	r4, #0
 920 00b0 DBE7     		b	.L50
 921              	.L55:
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 23


 255:Core/Src/ILI9341_GFX.c **** 							}
 256:Core/Src/ILI9341_GFX.c ****             }						
 257:Core/Src/ILI9341_GFX.c ****         }
 258:Core/Src/ILI9341_GFX.c ****     }
 259:Core/Src/ILI9341_GFX.c **** }
 922              		.loc 1 259 1 view .LVU263
 923 00b2 05B0     		add	sp, sp, #20
 924              	.LCFI13:
 925              		.cfi_def_cfa_offset 28
 926              		@ sp needed
 927 00b4 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 928              	.LVL116:
 929              	.L57:
 930              		.loc 1 259 1 view .LVU264
 931              		.align	2
 932              	.L56:
 933 00b8 00000000 		.word	.LANCHOR0
 934              		.cfi_endproc
 935              	.LFE141:
 937              		.section	.text.ILI9341_Draw_Text,"ax",%progbits
 938              		.align	1
 939              		.global	ILI9341_Draw_Text
 940              		.syntax unified
 941              		.thumb
 942              		.thumb_func
 944              	ILI9341_Draw_Text:
 945              	.LVL117:
 946              	.LFB142:
 260:Core/Src/ILI9341_GFX.c **** 
 261:Core/Src/ILI9341_GFX.c **** /*Draws an array of characters (fonts imported from fonts.h) at X,Y location with specified font co
 262:Core/Src/ILI9341_GFX.c **** /*See fonts.h implementation of font on what is required for changing to a different font when swit
 263:Core/Src/ILI9341_GFX.c **** void ILI9341_Draw_Text(const char* Text, uint8_t X, uint8_t Y, uint16_t Colour, uint16_t Size, uint
 264:Core/Src/ILI9341_GFX.c **** {
 947              		.loc 1 264 1 is_stmt 1 view -0
 948              		.cfi_startproc
 949              		@ args = 8, pretend = 0, frame = 0
 950              		@ frame_needed = 0, uses_anonymous_args = 0
 951              		.loc 1 264 1 is_stmt 0 view .LVU266
 952 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 953              	.LCFI14:
 954              		.cfi_def_cfa_offset 28
 955              		.cfi_offset 4, -28
 956              		.cfi_offset 5, -24
 957              		.cfi_offset 6, -20
 958              		.cfi_offset 7, -16
 959              		.cfi_offset 8, -12
 960              		.cfi_offset 9, -8
 961              		.cfi_offset 14, -4
 962 0004 83B0     		sub	sp, sp, #12
 963              	.LCFI15:
 964              		.cfi_def_cfa_offset 40
 965 0006 0446     		mov	r4, r0
 966 0008 0D46     		mov	r5, r1
 967 000a 9046     		mov	r8, r2
 968 000c 1F46     		mov	r7, r3
 969 000e BDF82860 		ldrh	r6, [sp, #40]
 970 0012 BDF82C90 		ldrh	r9, [sp, #44]
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 24


 265:Core/Src/ILI9341_GFX.c ****     while (*Text) {
 971              		.loc 1 265 5 is_stmt 1 view .LVU267
 972              		.loc 1 265 11 is_stmt 0 view .LVU268
 973 0016 0DE0     		b	.L59
 974              	.LVL118:
 975              	.L60:
 266:Core/Src/ILI9341_GFX.c ****         ILI9341_Draw_Char(*Text++, X, Y, Colour, Size, Background_Colour);
 976              		.loc 1 266 9 is_stmt 1 view .LVU269
 977              		.loc 1 266 32 is_stmt 0 view .LVU270
 978 0018 0134     		adds	r4, r4, #1
 979              	.LVL119:
 980              		.loc 1 266 9 view .LVU271
 981 001a CDF80490 		str	r9, [sp, #4]
 982 001e 0096     		str	r6, [sp]
 983 0020 3B46     		mov	r3, r7
 984 0022 4246     		mov	r2, r8
 985 0024 2946     		mov	r1, r5
 986 0026 FFF7FEFF 		bl	ILI9341_Draw_Char
 987              	.LVL120:
 267:Core/Src/ILI9341_GFX.c ****         X += CHAR_WIDTH*Size;
 988              		.loc 1 267 9 is_stmt 1 view .LVU272
 989              		.loc 1 267 11 is_stmt 0 view .LVU273
 990 002a 06EB4601 		add	r1, r6, r6, lsl #1
 991 002e 05EB4101 		add	r1, r5, r1, lsl #1
 992 0032 CDB2     		uxtb	r5, r1
 993              	.LVL121:
 994              	.L59:
 265:Core/Src/ILI9341_GFX.c ****     while (*Text) {
 995              		.loc 1 265 11 is_stmt 1 view .LVU274
 265:Core/Src/ILI9341_GFX.c ****     while (*Text) {
 996              		.loc 1 265 12 is_stmt 0 view .LVU275
 997 0034 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 265:Core/Src/ILI9341_GFX.c ****     while (*Text) {
 998              		.loc 1 265 11 view .LVU276
 999 0036 0028     		cmp	r0, #0
 1000 0038 EED1     		bne	.L60
 268:Core/Src/ILI9341_GFX.c ****     }
 269:Core/Src/ILI9341_GFX.c **** }
 1001              		.loc 1 269 1 view .LVU277
 1002 003a 03B0     		add	sp, sp, #12
 1003              	.LCFI16:
 1004              		.cfi_def_cfa_offset 28
 1005              		@ sp needed
 1006 003c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1007              		.loc 1 269 1 view .LVU278
 1008              		.cfi_endproc
 1009              	.LFE142:
 1011              		.section	.text.ILI9341_Draw_Image,"ax",%progbits
 1012              		.align	1
 1013              		.global	ILI9341_Draw_Image
 1014              		.syntax unified
 1015              		.thumb
 1016              		.thumb_func
 1018              	ILI9341_Draw_Image:
 1019              	.LVL122:
 1020              	.LFB143:
 270:Core/Src/ILI9341_GFX.c **** 
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 25


 271:Core/Src/ILI9341_GFX.c **** /*Draws a full screen picture from flash. Image converted from RGB .jpeg/other to C array using onl
 272:Core/Src/ILI9341_GFX.c **** //USING CONVERTER: http://www.digole.com/tools/PicturetoC_Hex_converter.php
 273:Core/Src/ILI9341_GFX.c **** //65K colour (2Bytes / Pixel)
 274:Core/Src/ILI9341_GFX.c **** void ILI9341_Draw_Image(const char* Image_Array, uint8_t Orientation)
 275:Core/Src/ILI9341_GFX.c **** {
 1021              		.loc 1 275 1 is_stmt 1 view -0
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 504
 1024              		@ frame_needed = 0, uses_anonymous_args = 0
 1025              		.loc 1 275 1 is_stmt 0 view .LVU280
 1026 0000 70B5     		push	{r4, r5, r6, lr}
 1027              	.LCFI17:
 1028              		.cfi_def_cfa_offset 16
 1029              		.cfi_offset 4, -16
 1030              		.cfi_offset 5, -12
 1031              		.cfi_offset 6, -8
 1032              		.cfi_offset 14, -4
 1033 0002 ADF5007D 		sub	sp, sp, #512
 1034              	.LCFI18:
 1035              		.cfi_def_cfa_offset 528
 1036 0006 0446     		mov	r4, r0
 276:Core/Src/ILI9341_GFX.c **** 	if(Orientation == SCREEN_HORIZONTAL_1)
 1037              		.loc 1 276 2 is_stmt 1 view .LVU281
 1038              		.loc 1 276 4 is_stmt 0 view .LVU282
 1039 0008 0129     		cmp	r1, #1
 1040 000a 09D0     		beq	.L86
 277:Core/Src/ILI9341_GFX.c **** 	{
 278:Core/Src/ILI9341_GFX.c **** 		ILI9341_Set_Rotation(SCREEN_HORIZONTAL_1);
 279:Core/Src/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_WIDTH,ILI9341_SCREEN_HEIGHT);
 280:Core/Src/ILI9341_GFX.c **** 			
 281:Core/Src/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOC, DC_Pin, GPIO_PIN_SET);	
 282:Core/Src/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOC, CS_Pin, GPIO_PIN_RESET);
 283:Core/Src/ILI9341_GFX.c **** 		
 284:Core/Src/ILI9341_GFX.c **** 		unsigned char Temp_small_buffer[BURST_MAX_SIZE];
 285:Core/Src/ILI9341_GFX.c **** 		uint32_t counter = 0;
 286:Core/Src/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 287:Core/Src/ILI9341_GFX.c **** 		{			
 288:Core/Src/ILI9341_GFX.c **** 				for(uint32_t k = 0; k< BURST_MAX_SIZE; k++)
 289:Core/Src/ILI9341_GFX.c **** 				{
 290:Core/Src/ILI9341_GFX.c **** 					Temp_small_buffer[k]	= Image_Array[counter+k];		
 291:Core/Src/ILI9341_GFX.c **** 				}						
 292:Core/Src/ILI9341_GFX.c **** 				HAL_SPI_Transmit(&hspi1, (unsigned char*)Temp_small_buffer, BURST_MAX_SIZE, 10);	
 293:Core/Src/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 294:Core/Src/ILI9341_GFX.c **** 		}
 295:Core/Src/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOC, CS_Pin, GPIO_PIN_SET);
 296:Core/Src/ILI9341_GFX.c **** 	}
 297:Core/Src/ILI9341_GFX.c **** 	else if(Orientation == SCREEN_HORIZONTAL_2)
 1041              		.loc 1 297 7 is_stmt 1 view .LVU283
 1042              		.loc 1 297 9 is_stmt 0 view .LVU284
 1043 000c 0329     		cmp	r1, #3
 1044 000e 3CD0     		beq	.L87
 298:Core/Src/ILI9341_GFX.c **** 	{
 299:Core/Src/ILI9341_GFX.c **** 		ILI9341_Set_Rotation(SCREEN_HORIZONTAL_2);
 300:Core/Src/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_WIDTH,ILI9341_SCREEN_HEIGHT);
 301:Core/Src/ILI9341_GFX.c **** 			
 302:Core/Src/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOC, DC_Pin, GPIO_PIN_SET);	
 303:Core/Src/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOC, CS_Pin, GPIO_PIN_RESET);
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 26


 304:Core/Src/ILI9341_GFX.c **** 		
 305:Core/Src/ILI9341_GFX.c **** 		unsigned char Temp_small_buffer[BURST_MAX_SIZE];
 306:Core/Src/ILI9341_GFX.c **** 		uint32_t counter = 0;
 307:Core/Src/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 308:Core/Src/ILI9341_GFX.c **** 		{			
 309:Core/Src/ILI9341_GFX.c **** 				for(uint32_t k = 0; k< BURST_MAX_SIZE; k++)
 310:Core/Src/ILI9341_GFX.c **** 				{
 311:Core/Src/ILI9341_GFX.c **** 					Temp_small_buffer[k]	= Image_Array[counter+k];		
 312:Core/Src/ILI9341_GFX.c **** 				}						
 313:Core/Src/ILI9341_GFX.c **** 				HAL_SPI_Transmit(&hspi1, (unsigned char*)Temp_small_buffer, BURST_MAX_SIZE, 10);	
 314:Core/Src/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 315:Core/Src/ILI9341_GFX.c **** 		}
 316:Core/Src/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOC, CS_Pin, GPIO_PIN_SET);
 317:Core/Src/ILI9341_GFX.c **** 	}
 318:Core/Src/ILI9341_GFX.c **** 	else if(Orientation == SCREEN_VERTICAL_2)
 1045              		.loc 1 318 7 is_stmt 1 view .LVU285
 1046              		.loc 1 318 9 is_stmt 0 view .LVU286
 1047 0010 0229     		cmp	r1, #2
 1048 0012 6FD0     		beq	.L88
 319:Core/Src/ILI9341_GFX.c **** 	{
 320:Core/Src/ILI9341_GFX.c **** 		ILI9341_Set_Rotation(SCREEN_VERTICAL_2);
 321:Core/Src/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_HEIGHT,ILI9341_SCREEN_WIDTH);
 322:Core/Src/ILI9341_GFX.c **** 
 323:Core/Src/ILI9341_GFX.c **** 		ILI9341_Draw_Rectangle(40,40,40,40,RED);
 324:Core/Src/ILI9341_GFX.c **** 			
 325:Core/Src/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOC, DC_Pin, GPIO_PIN_SET);	
 326:Core/Src/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOC, CS_Pin, GPIO_PIN_RESET);
 327:Core/Src/ILI9341_GFX.c **** 		
 328:Core/Src/ILI9341_GFX.c **** 		unsigned char Temp_small_buffer[BURST_MAX_SIZE];
 329:Core/Src/ILI9341_GFX.c **** 		uint32_t counter = 0;
 330:Core/Src/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 331:Core/Src/ILI9341_GFX.c **** 		{			
 332:Core/Src/ILI9341_GFX.c **** 				for(uint32_t k = 0; k< BURST_MAX_SIZE; k++)
 333:Core/Src/ILI9341_GFX.c **** 				{
 334:Core/Src/ILI9341_GFX.c **** 					Temp_small_buffer[k]	= Image_Array[counter+k];		
 335:Core/Src/ILI9341_GFX.c **** 				}						
 336:Core/Src/ILI9341_GFX.c **** 				HAL_StatusTypeDef status = HAL_SPI_Transmit(&hspi1, (unsigned char*)Temp_small_buffer, BURST_MA
 337:Core/Src/ILI9341_GFX.c **** 				if(status != HAL_OK)
 338:Core/Src/ILI9341_GFX.c **** 				{
 339:Core/Src/ILI9341_GFX.c **** 					while(1);
 340:Core/Src/ILI9341_GFX.c **** 				}
 341:Core/Src/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 342:Core/Src/ILI9341_GFX.c **** 		}
 343:Core/Src/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOC, CS_Pin, GPIO_PIN_SET);
 344:Core/Src/ILI9341_GFX.c **** 	}
 345:Core/Src/ILI9341_GFX.c **** 	else if(Orientation == SCREEN_VERTICAL_1)
 1049              		.loc 1 345 7 is_stmt 1 view .LVU287
 1050              		.loc 1 345 9 is_stmt 0 view .LVU288
 1051 0014 0029     		cmp	r1, #0
 1052 0016 00F0AE80 		beq	.L89
 1053              	.LVL123:
 1054              	.L62:
 346:Core/Src/ILI9341_GFX.c **** 	{
 347:Core/Src/ILI9341_GFX.c **** 		ILI9341_Set_Rotation(SCREEN_VERTICAL_1);
 348:Core/Src/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_HEIGHT,ILI9341_SCREEN_WIDTH);
 349:Core/Src/ILI9341_GFX.c **** 			
 350:Core/Src/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOC, DC_Pin, GPIO_PIN_SET);	
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 27


 351:Core/Src/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOC, CS_Pin, GPIO_PIN_RESET);
 352:Core/Src/ILI9341_GFX.c **** 		
 353:Core/Src/ILI9341_GFX.c **** 		unsigned char Temp_small_buffer[BURST_MAX_SIZE];
 354:Core/Src/ILI9341_GFX.c **** 		uint32_t counter = 0;
 355:Core/Src/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 356:Core/Src/ILI9341_GFX.c **** 		{			
 357:Core/Src/ILI9341_GFX.c **** 				for(uint32_t k = 0; k< BURST_MAX_SIZE; k++)
 358:Core/Src/ILI9341_GFX.c **** 				{
 359:Core/Src/ILI9341_GFX.c **** 					Temp_small_buffer[k]	= Image_Array[counter+k];		
 360:Core/Src/ILI9341_GFX.c **** 				}						
 361:Core/Src/ILI9341_GFX.c **** 				HAL_SPI_Transmit(&hspi1, (unsigned char*)Temp_small_buffer, BURST_MAX_SIZE, 10);	
 362:Core/Src/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 363:Core/Src/ILI9341_GFX.c **** 		}
 364:Core/Src/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOC, CS_Pin, GPIO_PIN_SET);
 365:Core/Src/ILI9341_GFX.c **** 	}
 366:Core/Src/ILI9341_GFX.c **** }
 1055              		.loc 1 366 1 view .LVU289
 1056 001a 0DF5007D 		add	sp, sp, #512
 1057              	.LCFI19:
 1058              		.cfi_remember_state
 1059              		.cfi_def_cfa_offset 16
 1060              		@ sp needed
 1061 001e 70BD     		pop	{r4, r5, r6, pc}
 1062              	.LVL124:
 1063              	.L86:
 1064              	.LCFI20:
 1065              		.cfi_restore_state
 1066              	.LBB6:
 278:Core/Src/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_WIDTH,ILI9341_SCREEN_HEIGHT);
 1067              		.loc 1 278 3 is_stmt 1 view .LVU290
 1068 0020 0120     		movs	r0, #1
 1069              	.LVL125:
 278:Core/Src/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_WIDTH,ILI9341_SCREEN_HEIGHT);
 1070              		.loc 1 278 3 is_stmt 0 view .LVU291
 1071 0022 FFF7FEFF 		bl	ILI9341_Set_Rotation
 1072              	.LVL126:
 279:Core/Src/ILI9341_GFX.c **** 			
 1073              		.loc 1 279 3 is_stmt 1 view .LVU292
 1074 0026 4FF4A073 		mov	r3, #320
 1075 002a F022     		movs	r2, #240
 1076 002c 0021     		movs	r1, #0
 1077 002e 0846     		mov	r0, r1
 1078 0030 FFF7FEFF 		bl	ILI9341_Set_Address
 1079              	.LVL127:
 281:Core/Src/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOC, CS_Pin, GPIO_PIN_RESET);
 1080              		.loc 1 281 3 view .LVU293
 1081 0034 6A4D     		ldr	r5, .L95
 1082 0036 0122     		movs	r2, #1
 1083 0038 0421     		movs	r1, #4
 1084 003a 2846     		mov	r0, r5
 1085 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1086              	.LVL128:
 282:Core/Src/ILI9341_GFX.c **** 		
 1087              		.loc 1 282 3 view .LVU294
 1088 0040 0022     		movs	r2, #0
 1089 0042 0121     		movs	r1, #1
 1090 0044 2846     		mov	r0, r5
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 28


 1091 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1092              	.LVL129:
 284:Core/Src/ILI9341_GFX.c **** 		uint32_t counter = 0;
 1093              		.loc 1 284 3 view .LVU295
 285:Core/Src/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 1094              		.loc 1 285 3 view .LVU296
 286:Core/Src/ILI9341_GFX.c **** 		{			
 1095              		.loc 1 286 3 view .LVU297
 1096              	.LBB7:
 286:Core/Src/ILI9341_GFX.c **** 		{			
 1097              		.loc 1 286 7 view .LVU298
 286:Core/Src/ILI9341_GFX.c **** 		{			
 1098              		.loc 1 286 16 is_stmt 0 view .LVU299
 1099 004a 0026     		movs	r6, #0
 1100              	.LBE7:
 285:Core/Src/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 1101              		.loc 1 285 12 view .LVU300
 1102 004c 3546     		mov	r5, r6
 1103              	.LBB10:
 286:Core/Src/ILI9341_GFX.c **** 		{			
 1104              		.loc 1 286 3 view .LVU301
 1105 004e 11E0     		b	.L64
 1106              	.LVL130:
 1107              	.L65:
 1108              	.LBB8:
 290:Core/Src/ILI9341_GFX.c **** 				}						
 1109              		.loc 1 290 6 is_stmt 1 discriminator 3 view .LVU302
 290:Core/Src/ILI9341_GFX.c **** 				}						
 1110              		.loc 1 290 48 is_stmt 0 discriminator 3 view .LVU303
 1111 0050 EA18     		adds	r2, r5, r3
 290:Core/Src/ILI9341_GFX.c **** 				}						
 1112              		.loc 1 290 40 discriminator 3 view .LVU304
 1113 0052 A15C     		ldrb	r1, [r4, r2]	@ zero_extendqisi2
 290:Core/Src/ILI9341_GFX.c **** 				}						
 1114              		.loc 1 290 27 discriminator 3 view .LVU305
 1115 0054 03AA     		add	r2, sp, #12
 1116 0056 D154     		strb	r1, [r2, r3]
 288:Core/Src/ILI9341_GFX.c **** 				{
 1117              		.loc 1 288 44 is_stmt 1 discriminator 3 view .LVU306
 288:Core/Src/ILI9341_GFX.c **** 				{
 1118              		.loc 1 288 45 is_stmt 0 discriminator 3 view .LVU307
 1119 0058 0133     		adds	r3, r3, #1
 1120              	.LVL131:
 1121              	.L66:
 288:Core/Src/ILI9341_GFX.c **** 				{
 1122              		.loc 1 288 25 is_stmt 1 discriminator 1 view .LVU308
 288:Core/Src/ILI9341_GFX.c **** 				{
 1123              		.loc 1 288 5 is_stmt 0 discriminator 1 view .LVU309
 1124 005a B3F5FA7F 		cmp	r3, #500
 1125 005e F7D3     		bcc	.L65
 1126              	.LBE8:
 292:Core/Src/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 1127              		.loc 1 292 5 is_stmt 1 discriminator 2 view .LVU310
 1128 0060 0A23     		movs	r3, #10
 1129              	.LVL132:
 292:Core/Src/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 1130              		.loc 1 292 5 is_stmt 0 discriminator 2 view .LVU311
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 29


 1131 0062 4FF4FA72 		mov	r2, #500
 1132 0066 03A9     		add	r1, sp, #12
 1133 0068 5E48     		ldr	r0, .L95+4
 1134 006a FFF7FEFF 		bl	HAL_SPI_Transmit
 1135              	.LVL133:
 293:Core/Src/ILI9341_GFX.c **** 		}
 1136              		.loc 1 293 5 is_stmt 1 discriminator 2 view .LVU312
 293:Core/Src/ILI9341_GFX.c **** 		}
 1137              		.loc 1 293 13 is_stmt 0 discriminator 2 view .LVU313
 1138 006e 05F5FA75 		add	r5, r5, #500
 1139              	.LVL134:
 286:Core/Src/ILI9341_GFX.c **** 		{			
 1140              		.loc 1 286 88 is_stmt 1 discriminator 2 view .LVU314
 286:Core/Src/ILI9341_GFX.c **** 		{			
 1141              		.loc 1 286 89 is_stmt 0 discriminator 2 view .LVU315
 1142 0072 0136     		adds	r6, r6, #1
 1143              	.LVL135:
 1144              	.L64:
 286:Core/Src/ILI9341_GFX.c **** 		{			
 1145              		.loc 1 286 23 is_stmt 1 discriminator 1 view .LVU316
 286:Core/Src/ILI9341_GFX.c **** 		{			
 1146              		.loc 1 286 3 is_stmt 0 discriminator 1 view .LVU317
 1147 0074 B6F5997F 		cmp	r6, #306
 1148 0078 01D8     		bhi	.L90
 1149              	.LBB9:
 288:Core/Src/ILI9341_GFX.c **** 				{
 1150              		.loc 1 288 18 view .LVU318
 1151 007a 0023     		movs	r3, #0
 1152 007c EDE7     		b	.L66
 1153              	.L90:
 1154              	.LBE9:
 1155              	.LBE10:
 295:Core/Src/ILI9341_GFX.c **** 	}
 1156              		.loc 1 295 3 is_stmt 1 view .LVU319
 1157 007e 0122     		movs	r2, #1
 1158 0080 1146     		mov	r1, r2
 1159 0082 5748     		ldr	r0, .L95
 1160 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1161              	.LVL136:
 1162              	.LBE6:
 1163 0088 C7E7     		b	.L62
 1164              	.LVL137:
 1165              	.L87:
 1166              	.LBB11:
 299:Core/Src/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_WIDTH,ILI9341_SCREEN_HEIGHT);
 1167              		.loc 1 299 3 view .LVU320
 1168 008a 0320     		movs	r0, #3
 1169              	.LVL138:
 299:Core/Src/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_WIDTH,ILI9341_SCREEN_HEIGHT);
 1170              		.loc 1 299 3 is_stmt 0 view .LVU321
 1171 008c FFF7FEFF 		bl	ILI9341_Set_Rotation
 1172              	.LVL139:
 300:Core/Src/ILI9341_GFX.c **** 			
 1173              		.loc 1 300 3 is_stmt 1 view .LVU322
 1174 0090 4FF4A073 		mov	r3, #320
 1175 0094 F022     		movs	r2, #240
 1176 0096 0021     		movs	r1, #0
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 30


 1177 0098 0846     		mov	r0, r1
 1178 009a FFF7FEFF 		bl	ILI9341_Set_Address
 1179              	.LVL140:
 302:Core/Src/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOC, CS_Pin, GPIO_PIN_RESET);
 1180              		.loc 1 302 3 view .LVU323
 1181 009e 504D     		ldr	r5, .L95
 1182 00a0 0122     		movs	r2, #1
 1183 00a2 0421     		movs	r1, #4
 1184 00a4 2846     		mov	r0, r5
 1185 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1186              	.LVL141:
 303:Core/Src/ILI9341_GFX.c **** 		
 1187              		.loc 1 303 3 view .LVU324
 1188 00aa 0022     		movs	r2, #0
 1189 00ac 0121     		movs	r1, #1
 1190 00ae 2846     		mov	r0, r5
 1191 00b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1192              	.LVL142:
 305:Core/Src/ILI9341_GFX.c **** 		uint32_t counter = 0;
 1193              		.loc 1 305 3 view .LVU325
 306:Core/Src/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 1194              		.loc 1 306 3 view .LVU326
 307:Core/Src/ILI9341_GFX.c **** 		{			
 1195              		.loc 1 307 3 view .LVU327
 1196              	.LBB12:
 307:Core/Src/ILI9341_GFX.c **** 		{			
 1197              		.loc 1 307 7 view .LVU328
 307:Core/Src/ILI9341_GFX.c **** 		{			
 1198              		.loc 1 307 16 is_stmt 0 view .LVU329
 1199 00b4 0026     		movs	r6, #0
 1200              	.LBE12:
 306:Core/Src/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 1201              		.loc 1 306 12 view .LVU330
 1202 00b6 3546     		mov	r5, r6
 1203              	.LBB15:
 307:Core/Src/ILI9341_GFX.c **** 		{			
 1204              		.loc 1 307 3 view .LVU331
 1205 00b8 11E0     		b	.L69
 1206              	.LVL143:
 1207              	.L70:
 1208              	.LBB13:
 311:Core/Src/ILI9341_GFX.c **** 				}						
 1209              		.loc 1 311 6 is_stmt 1 discriminator 3 view .LVU332
 311:Core/Src/ILI9341_GFX.c **** 				}						
 1210              		.loc 1 311 48 is_stmt 0 discriminator 3 view .LVU333
 1211 00ba EA18     		adds	r2, r5, r3
 311:Core/Src/ILI9341_GFX.c **** 				}						
 1212              		.loc 1 311 40 discriminator 3 view .LVU334
 1213 00bc A15C     		ldrb	r1, [r4, r2]	@ zero_extendqisi2
 311:Core/Src/ILI9341_GFX.c **** 				}						
 1214              		.loc 1 311 27 discriminator 3 view .LVU335
 1215 00be 03AA     		add	r2, sp, #12
 1216 00c0 D154     		strb	r1, [r2, r3]
 309:Core/Src/ILI9341_GFX.c **** 				{
 1217              		.loc 1 309 44 is_stmt 1 discriminator 3 view .LVU336
 309:Core/Src/ILI9341_GFX.c **** 				{
 1218              		.loc 1 309 45 is_stmt 0 discriminator 3 view .LVU337
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 31


 1219 00c2 0133     		adds	r3, r3, #1
 1220              	.LVL144:
 1221              	.L71:
 309:Core/Src/ILI9341_GFX.c **** 				{
 1222              		.loc 1 309 25 is_stmt 1 discriminator 1 view .LVU338
 309:Core/Src/ILI9341_GFX.c **** 				{
 1223              		.loc 1 309 5 is_stmt 0 discriminator 1 view .LVU339
 1224 00c4 B3F5FA7F 		cmp	r3, #500
 1225 00c8 F7D3     		bcc	.L70
 1226              	.LBE13:
 313:Core/Src/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 1227              		.loc 1 313 5 is_stmt 1 discriminator 2 view .LVU340
 1228 00ca 0A23     		movs	r3, #10
 1229              	.LVL145:
 313:Core/Src/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 1230              		.loc 1 313 5 is_stmt 0 discriminator 2 view .LVU341
 1231 00cc 4FF4FA72 		mov	r2, #500
 1232 00d0 03A9     		add	r1, sp, #12
 1233 00d2 4448     		ldr	r0, .L95+4
 1234 00d4 FFF7FEFF 		bl	HAL_SPI_Transmit
 1235              	.LVL146:
 314:Core/Src/ILI9341_GFX.c **** 		}
 1236              		.loc 1 314 5 is_stmt 1 discriminator 2 view .LVU342
 314:Core/Src/ILI9341_GFX.c **** 		}
 1237              		.loc 1 314 13 is_stmt 0 discriminator 2 view .LVU343
 1238 00d8 05F5FA75 		add	r5, r5, #500
 1239              	.LVL147:
 307:Core/Src/ILI9341_GFX.c **** 		{			
 1240              		.loc 1 307 88 is_stmt 1 discriminator 2 view .LVU344
 307:Core/Src/ILI9341_GFX.c **** 		{			
 1241              		.loc 1 307 89 is_stmt 0 discriminator 2 view .LVU345
 1242 00dc 0136     		adds	r6, r6, #1
 1243              	.LVL148:
 1244              	.L69:
 307:Core/Src/ILI9341_GFX.c **** 		{			
 1245              		.loc 1 307 23 is_stmt 1 discriminator 1 view .LVU346
 307:Core/Src/ILI9341_GFX.c **** 		{			
 1246              		.loc 1 307 3 is_stmt 0 discriminator 1 view .LVU347
 1247 00de B6F5997F 		cmp	r6, #306
 1248 00e2 01D8     		bhi	.L91
 1249              	.LBB14:
 309:Core/Src/ILI9341_GFX.c **** 				{
 1250              		.loc 1 309 18 view .LVU348
 1251 00e4 0023     		movs	r3, #0
 1252 00e6 EDE7     		b	.L71
 1253              	.L91:
 1254              	.LBE14:
 1255              	.LBE15:
 316:Core/Src/ILI9341_GFX.c **** 	}
 1256              		.loc 1 316 3 is_stmt 1 view .LVU349
 1257 00e8 0122     		movs	r2, #1
 1258 00ea 1146     		mov	r1, r2
 1259 00ec 3C48     		ldr	r0, .L95
 1260 00ee FFF7FEFF 		bl	HAL_GPIO_WritePin
 1261              	.LVL149:
 1262              	.LBE11:
 1263 00f2 92E7     		b	.L62
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 32


 1264              	.LVL150:
 1265              	.L88:
 1266              	.LBB16:
 320:Core/Src/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_HEIGHT,ILI9341_SCREEN_WIDTH);
 1267              		.loc 1 320 3 view .LVU350
 1268 00f4 0220     		movs	r0, #2
 1269              	.LVL151:
 320:Core/Src/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_HEIGHT,ILI9341_SCREEN_WIDTH);
 1270              		.loc 1 320 3 is_stmt 0 view .LVU351
 1271 00f6 FFF7FEFF 		bl	ILI9341_Set_Rotation
 1272              	.LVL152:
 321:Core/Src/ILI9341_GFX.c **** 
 1273              		.loc 1 321 3 is_stmt 1 view .LVU352
 1274 00fa F023     		movs	r3, #240
 1275 00fc 4FF4A072 		mov	r2, #320
 1276 0100 0021     		movs	r1, #0
 1277 0102 0846     		mov	r0, r1
 1278 0104 FFF7FEFF 		bl	ILI9341_Set_Address
 1279              	.LVL153:
 323:Core/Src/ILI9341_GFX.c **** 			
 1280              		.loc 1 323 3 view .LVU353
 1281 0108 4FF47843 		mov	r3, #63488
 1282 010c 0093     		str	r3, [sp]
 1283 010e 2823     		movs	r3, #40
 1284 0110 1A46     		mov	r2, r3
 1285 0112 1946     		mov	r1, r3
 1286 0114 1846     		mov	r0, r3
 1287 0116 FFF7FEFF 		bl	ILI9341_Draw_Rectangle
 1288              	.LVL154:
 325:Core/Src/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOC, CS_Pin, GPIO_PIN_RESET);
 1289              		.loc 1 325 3 view .LVU354
 1290 011a 314D     		ldr	r5, .L95
 1291 011c 0122     		movs	r2, #1
 1292 011e 0421     		movs	r1, #4
 1293 0120 2846     		mov	r0, r5
 1294 0122 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1295              	.LVL155:
 326:Core/Src/ILI9341_GFX.c **** 		
 1296              		.loc 1 326 3 view .LVU355
 1297 0126 0022     		movs	r2, #0
 1298 0128 0121     		movs	r1, #1
 1299 012a 2846     		mov	r0, r5
 1300 012c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1301              	.LVL156:
 328:Core/Src/ILI9341_GFX.c **** 		uint32_t counter = 0;
 1302              		.loc 1 328 3 view .LVU356
 329:Core/Src/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 1303              		.loc 1 329 3 view .LVU357
 330:Core/Src/ILI9341_GFX.c **** 		{			
 1304              		.loc 1 330 3 view .LVU358
 1305              	.LBB17:
 330:Core/Src/ILI9341_GFX.c **** 		{			
 1306              		.loc 1 330 7 view .LVU359
 330:Core/Src/ILI9341_GFX.c **** 		{			
 1307              		.loc 1 330 16 is_stmt 0 view .LVU360
 1308 0130 0026     		movs	r6, #0
 1309              	.LBE17:
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 33


 329:Core/Src/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 1310              		.loc 1 329 12 view .LVU361
 1311 0132 3546     		mov	r5, r6
 1312              	.LBB22:
 330:Core/Src/ILI9341_GFX.c **** 		{			
 1313              		.loc 1 330 3 view .LVU362
 1314 0134 13E0     		b	.L73
 1315              	.LVL157:
 1316              	.L74:
 1317              	.LBB18:
 1318              	.LBB19:
 334:Core/Src/ILI9341_GFX.c **** 				}						
 1319              		.loc 1 334 6 is_stmt 1 discriminator 3 view .LVU363
 334:Core/Src/ILI9341_GFX.c **** 				}						
 1320              		.loc 1 334 48 is_stmt 0 discriminator 3 view .LVU364
 1321 0136 EA18     		adds	r2, r5, r3
 334:Core/Src/ILI9341_GFX.c **** 				}						
 1322              		.loc 1 334 40 discriminator 3 view .LVU365
 1323 0138 A15C     		ldrb	r1, [r4, r2]	@ zero_extendqisi2
 334:Core/Src/ILI9341_GFX.c **** 				}						
 1324              		.loc 1 334 27 discriminator 3 view .LVU366
 1325 013a 03AA     		add	r2, sp, #12
 1326 013c D154     		strb	r1, [r2, r3]
 332:Core/Src/ILI9341_GFX.c **** 				{
 1327              		.loc 1 332 44 is_stmt 1 discriminator 3 view .LVU367
 332:Core/Src/ILI9341_GFX.c **** 				{
 1328              		.loc 1 332 45 is_stmt 0 discriminator 3 view .LVU368
 1329 013e 0133     		adds	r3, r3, #1
 1330              	.LVL158:
 1331              	.L77:
 332:Core/Src/ILI9341_GFX.c **** 				{
 1332              		.loc 1 332 25 is_stmt 1 discriminator 1 view .LVU369
 332:Core/Src/ILI9341_GFX.c **** 				{
 1333              		.loc 1 332 5 is_stmt 0 discriminator 1 view .LVU370
 1334 0140 B3F5FA7F 		cmp	r3, #500
 1335 0144 F7D3     		bcc	.L74
 1336              	.LBE19:
 336:Core/Src/ILI9341_GFX.c **** 				if(status != HAL_OK)
 1337              		.loc 1 336 5 is_stmt 1 view .LVU371
 336:Core/Src/ILI9341_GFX.c **** 				if(status != HAL_OK)
 1338              		.loc 1 336 32 is_stmt 0 view .LVU372
 1339 0146 4FF47A73 		mov	r3, #1000
 1340              	.LVL159:
 336:Core/Src/ILI9341_GFX.c **** 				if(status != HAL_OK)
 1341              		.loc 1 336 32 view .LVU373
 1342 014a 4FF4FA72 		mov	r2, #500
 1343 014e 03A9     		add	r1, sp, #12
 1344 0150 2448     		ldr	r0, .L95+4
 1345 0152 FFF7FEFF 		bl	HAL_SPI_Transmit
 1346              	.LVL160:
 337:Core/Src/ILI9341_GFX.c **** 				{
 1347              		.loc 1 337 5 is_stmt 1 view .LVU374
 337:Core/Src/ILI9341_GFX.c **** 				{
 1348              		.loc 1 337 7 is_stmt 0 view .LVU375
 1349 0156 38B9     		cbnz	r0, .L76
 341:Core/Src/ILI9341_GFX.c **** 		}
 1350              		.loc 1 341 5 is_stmt 1 discriminator 2 view .LVU376
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 34


 341:Core/Src/ILI9341_GFX.c **** 		}
 1351              		.loc 1 341 13 is_stmt 0 discriminator 2 view .LVU377
 1352 0158 05F5FA75 		add	r5, r5, #500
 1353              	.LVL161:
 341:Core/Src/ILI9341_GFX.c **** 		}
 1354              		.loc 1 341 13 discriminator 2 view .LVU378
 1355              	.LBE18:
 330:Core/Src/ILI9341_GFX.c **** 		{			
 1356              		.loc 1 330 88 is_stmt 1 discriminator 2 view .LVU379
 330:Core/Src/ILI9341_GFX.c **** 		{			
 1357              		.loc 1 330 89 is_stmt 0 discriminator 2 view .LVU380
 1358 015c 0136     		adds	r6, r6, #1
 1359              	.LVL162:
 1360              	.L73:
 330:Core/Src/ILI9341_GFX.c **** 		{			
 1361              		.loc 1 330 23 is_stmt 1 discriminator 1 view .LVU381
 330:Core/Src/ILI9341_GFX.c **** 		{			
 1362              		.loc 1 330 3 is_stmt 0 discriminator 1 view .LVU382
 1363 015e B6F5997F 		cmp	r6, #306
 1364 0162 02D8     		bhi	.L92
 1365              	.LBB21:
 1366              	.LBB20:
 332:Core/Src/ILI9341_GFX.c **** 				{
 1367              		.loc 1 332 18 view .LVU383
 1368 0164 0023     		movs	r3, #0
 1369 0166 EBE7     		b	.L77
 1370              	.LVL163:
 1371              	.L76:
 332:Core/Src/ILI9341_GFX.c **** 				{
 1372              		.loc 1 332 18 view .LVU384
 1373              	.LBE20:
 339:Core/Src/ILI9341_GFX.c **** 				}
 1374              		.loc 1 339 6 is_stmt 1 discriminator 1 view .LVU385
 339:Core/Src/ILI9341_GFX.c **** 				}
 1375              		.loc 1 339 14 discriminator 1 view .LVU386
 339:Core/Src/ILI9341_GFX.c **** 				}
 1376              		.loc 1 339 11 discriminator 1 view .LVU387
 1377 0168 FEE7     		b	.L76
 1378              	.LVL164:
 1379              	.L92:
 339:Core/Src/ILI9341_GFX.c **** 				}
 1380              		.loc 1 339 11 is_stmt 0 discriminator 1 view .LVU388
 1381              	.LBE21:
 1382              	.LBE22:
 343:Core/Src/ILI9341_GFX.c **** 	}
 1383              		.loc 1 343 3 is_stmt 1 view .LVU389
 1384 016a 0122     		movs	r2, #1
 1385 016c 1146     		mov	r1, r2
 1386 016e 1C48     		ldr	r0, .L95
 1387 0170 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1388              	.LVL165:
 1389              	.LBE16:
 1390 0174 51E7     		b	.L62
 1391              	.LVL166:
 1392              	.L89:
 1393              	.LBB23:
 347:Core/Src/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_HEIGHT,ILI9341_SCREEN_WIDTH);
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 35


 1394              		.loc 1 347 3 view .LVU390
 1395 0176 0020     		movs	r0, #0
 1396              	.LVL167:
 347:Core/Src/ILI9341_GFX.c **** 		ILI9341_Set_Address(0,0,ILI9341_SCREEN_HEIGHT,ILI9341_SCREEN_WIDTH);
 1397              		.loc 1 347 3 is_stmt 0 view .LVU391
 1398 0178 FFF7FEFF 		bl	ILI9341_Set_Rotation
 1399              	.LVL168:
 348:Core/Src/ILI9341_GFX.c **** 			
 1400              		.loc 1 348 3 is_stmt 1 view .LVU392
 1401 017c F023     		movs	r3, #240
 1402 017e 4FF4A072 		mov	r2, #320
 1403 0182 0021     		movs	r1, #0
 1404 0184 0846     		mov	r0, r1
 1405 0186 FFF7FEFF 		bl	ILI9341_Set_Address
 1406              	.LVL169:
 350:Core/Src/ILI9341_GFX.c **** 		HAL_GPIO_WritePin(GPIOC, CS_Pin, GPIO_PIN_RESET);
 1407              		.loc 1 350 3 view .LVU393
 1408 018a 154D     		ldr	r5, .L95
 1409 018c 0122     		movs	r2, #1
 1410 018e 0421     		movs	r1, #4
 1411 0190 2846     		mov	r0, r5
 1412 0192 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1413              	.LVL170:
 351:Core/Src/ILI9341_GFX.c **** 		
 1414              		.loc 1 351 3 view .LVU394
 1415 0196 0022     		movs	r2, #0
 1416 0198 0121     		movs	r1, #1
 1417 019a 2846     		mov	r0, r5
 1418 019c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1419              	.LVL171:
 353:Core/Src/ILI9341_GFX.c **** 		uint32_t counter = 0;
 1420              		.loc 1 353 3 view .LVU395
 354:Core/Src/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 1421              		.loc 1 354 3 view .LVU396
 355:Core/Src/ILI9341_GFX.c **** 		{			
 1422              		.loc 1 355 3 view .LVU397
 1423              	.LBB24:
 355:Core/Src/ILI9341_GFX.c **** 		{			
 1424              		.loc 1 355 7 view .LVU398
 355:Core/Src/ILI9341_GFX.c **** 		{			
 1425              		.loc 1 355 16 is_stmt 0 view .LVU399
 1426 01a0 0026     		movs	r6, #0
 1427              	.LBE24:
 354:Core/Src/ILI9341_GFX.c **** 		for(uint32_t i = 0; i < ILI9341_SCREEN_WIDTH*ILI9341_SCREEN_HEIGHT*2/BURST_MAX_SIZE; i++)
 1428              		.loc 1 354 12 view .LVU400
 1429 01a2 3546     		mov	r5, r6
 1430              	.LBB26:
 355:Core/Src/ILI9341_GFX.c **** 		{			
 1431              		.loc 1 355 3 view .LVU401
 1432 01a4 09E0     		b	.L78
 1433              	.LVL172:
 1434              	.L94:
 361:Core/Src/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
 1435              		.loc 1 361 5 is_stmt 1 discriminator 2 view .LVU402
 1436 01a6 0A23     		movs	r3, #10
 1437              	.LVL173:
 361:Core/Src/ILI9341_GFX.c **** 				counter += BURST_MAX_SIZE;			
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 36


 1438              		.loc 1 361 5 is_stmt 0 discriminator 2 view .LVU403
 1439 01a8 4FF4FA72 		mov	r2, #500
 1440 01ac 03A9     		add	r1, sp, #12
 1441 01ae 0D48     		ldr	r0, .L95+4
 1442 01b0 FFF7FEFF 		bl	HAL_SPI_Transmit
 1443              	.LVL174:
 362:Core/Src/ILI9341_GFX.c **** 		}
 1444              		.loc 1 362 5 is_stmt 1 discriminator 2 view .LVU404
 362:Core/Src/ILI9341_GFX.c **** 		}
 1445              		.loc 1 362 13 is_stmt 0 discriminator 2 view .LVU405
 1446 01b4 05F5FA75 		add	r5, r5, #500
 1447              	.LVL175:
 355:Core/Src/ILI9341_GFX.c **** 		{			
 1448              		.loc 1 355 88 is_stmt 1 discriminator 2 view .LVU406
 355:Core/Src/ILI9341_GFX.c **** 		{			
 1449              		.loc 1 355 89 is_stmt 0 discriminator 2 view .LVU407
 1450 01b8 0136     		adds	r6, r6, #1
 1451              	.LVL176:
 1452              	.L78:
 355:Core/Src/ILI9341_GFX.c **** 		{			
 1453              		.loc 1 355 23 is_stmt 1 discriminator 1 view .LVU408
 355:Core/Src/ILI9341_GFX.c **** 		{			
 1454              		.loc 1 355 3 is_stmt 0 discriminator 1 view .LVU409
 1455 01ba B6F5997F 		cmp	r6, #306
 1456 01be 09D8     		bhi	.L93
 1457              	.LBB25:
 357:Core/Src/ILI9341_GFX.c **** 				{
 1458              		.loc 1 357 18 view .LVU410
 1459 01c0 0023     		movs	r3, #0
 1460              	.L80:
 1461              	.LVL177:
 357:Core/Src/ILI9341_GFX.c **** 				{
 1462              		.loc 1 357 25 is_stmt 1 discriminator 1 view .LVU411
 357:Core/Src/ILI9341_GFX.c **** 				{
 1463              		.loc 1 357 5 is_stmt 0 discriminator 1 view .LVU412
 1464 01c2 B3F5FA7F 		cmp	r3, #500
 1465 01c6 EED2     		bcs	.L94
 359:Core/Src/ILI9341_GFX.c **** 				}						
 1466              		.loc 1 359 6 is_stmt 1 discriminator 3 view .LVU413
 359:Core/Src/ILI9341_GFX.c **** 				}						
 1467              		.loc 1 359 48 is_stmt 0 discriminator 3 view .LVU414
 1468 01c8 EA18     		adds	r2, r5, r3
 359:Core/Src/ILI9341_GFX.c **** 				}						
 1469              		.loc 1 359 40 discriminator 3 view .LVU415
 1470 01ca A15C     		ldrb	r1, [r4, r2]	@ zero_extendqisi2
 359:Core/Src/ILI9341_GFX.c **** 				}						
 1471              		.loc 1 359 27 discriminator 3 view .LVU416
 1472 01cc 03AA     		add	r2, sp, #12
 1473 01ce D154     		strb	r1, [r2, r3]
 357:Core/Src/ILI9341_GFX.c **** 				{
 1474              		.loc 1 357 44 is_stmt 1 discriminator 3 view .LVU417
 357:Core/Src/ILI9341_GFX.c **** 				{
 1475              		.loc 1 357 45 is_stmt 0 discriminator 3 view .LVU418
 1476 01d0 0133     		adds	r3, r3, #1
 1477              	.LVL178:
 357:Core/Src/ILI9341_GFX.c **** 				{
 1478              		.loc 1 357 45 discriminator 3 view .LVU419
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 37


 1479 01d2 F6E7     		b	.L80
 1480              	.LVL179:
 1481              	.L93:
 357:Core/Src/ILI9341_GFX.c **** 				{
 1482              		.loc 1 357 45 discriminator 3 view .LVU420
 1483              	.LBE25:
 1484              	.LBE26:
 364:Core/Src/ILI9341_GFX.c **** 	}
 1485              		.loc 1 364 3 is_stmt 1 view .LVU421
 1486 01d4 0122     		movs	r2, #1
 1487 01d6 1146     		mov	r1, r2
 1488 01d8 0148     		ldr	r0, .L95
 1489 01da FFF7FEFF 		bl	HAL_GPIO_WritePin
 1490              	.LVL180:
 1491              	.LBE23:
 1492              		.loc 1 366 1 is_stmt 0 view .LVU422
 1493 01de 1CE7     		b	.L62
 1494              	.L96:
 1495              		.align	2
 1496              	.L95:
 1497 01e0 00080240 		.word	1073874944
 1498 01e4 00000000 		.word	hspi1
 1499              		.cfi_endproc
 1500              	.LFE143:
 1502              		.section	.rodata.font,"a"
 1503              		.align	2
 1504              		.set	.LANCHOR0,. + 0
 1507              	font:
 1508 0000 00000000 		.ascii	"\000\000\000\000\000\000"
 1508      0000
 1509 0006 5C000000 		.ascii	"\\\000\000\000\000\000"
 1509      0000
 1510 000c 06000600 		.ascii	"\006\000\006\000\000\000"
 1510      0000
 1511 0012 287C287C 		.ascii	"(|(|(\000"
 1511      2800
 1512 0018 5C54FE54 		.ascii	"\\T\376Tt\000"
 1512      7400
 1513 001e 44201008 		.ascii	"D \020\010D\000"
 1513      4400
 1514 0024 28545420 		.ascii	"(TT P\000"
 1514      5000
 1515 002a 06000000 		.ascii	"\006\000\000\000\000\000"
 1515      0000
 1516 0030 38440000 		.ascii	"8D\000\000\000\000"
 1516      0000
 1517 0036 44380000 		.ascii	"D8\000\000\000\000"
 1517      0000
 1518 003c 02070200 		.ascii	"\002\007\002\000\000\000"
 1518      0000
 1519 0042 10107C10 		.ascii	"\020\020|\020\020\000"
 1519      1000
 1520 0048 C0000000 		.ascii	"\300\000\000\000\000\000"
 1520      0000
 1521 004e 10101010 		.ascii	"\020\020\020\020\020\000"
 1521      1000
 1522 0054 40000000 		.ascii	"@\000\000\000\000\000"
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 38


 1522      0000
 1523 005a 60100C00 		.ascii	"`\020\014\000\000\000"
 1523      0000
 1524 0060 7C64544C 		.ascii	"|dTL|\000"
 1524      7C00
 1525 0066 487C4000 		.ascii	"H|@\000\000\000"
 1525      0000
 1526 006c 64545454 		.ascii	"dTTTH\000"
 1526      4800
 1527 0072 44545454 		.ascii	"DTTTl\000"
 1527      6C00
 1528 0078 3C207020 		.ascii	"< p  \000"
 1528      2000
 1529 007e 5C545454 		.ascii	"\\TTT$\000"
 1529      2400
 1530 0084 7C545454 		.ascii	"|TTTt\000"
 1530      7400
 1531 008a 04046414 		.ascii	"\004\004d\024\014\000"
 1531      0C00
 1532 0090 7C545454 		.ascii	"|TTT|\000"
 1532      7C00
 1533 0096 5C545454 		.ascii	"\\TTT|\000"
 1533      7C00
 1534 009c 44000000 		.ascii	"D\000\000\000\000\000"
 1534      0000
 1535 00a2 C4000000 		.ascii	"\304\000\000\000\000\000"
 1535      0000
 1536 00a8 10284400 		.ascii	"\020(D\000\000\000"
 1536      0000
 1537 00ae 28282828 		.ascii	"(((((\000"
 1537      2800
 1538 00b4 44281000 		.ascii	"D(\020\000\000\000"
 1538      0000
 1539 00ba 08045408 		.ascii	"\010\004T\010\000\000"
 1539      0000
 1540 00c0 7C445454 		.ascii	"|DTT\\\000"
 1540      5C00
 1541 00c6 7C242424 		.ascii	"|$$$|\000"
 1541      7C00
 1542 00cc 7C545454 		.ascii	"|TTTl\000"
 1542      6C00
 1543 00d2 7C444444 		.ascii	"|DDDD\000"
 1543      4400
 1544 00d8 7C444444 		.ascii	"|DDD8\000"
 1544      3800
 1545 00de 7C545454 		.ascii	"|TTTD\000"
 1545      4400
 1546 00e4 7C141414 		.ascii	"|\024\024\024\004\000"
 1546      0400
 1547 00ea 7C444454 		.ascii	"|DDTt\000"
 1547      7400
 1548 00f0 7C101010 		.ascii	"|\020\020\020|\000"
 1548      7C00
 1549 00f6 44447C44 		.ascii	"DD|DD\000"
 1549      4400
 1550 00fc 60404044 		.ascii	"`@@D|\000"
 1550      7C00
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 39


 1551 0102 7C101028 		.ascii	"|\020\020(D\000"
 1551      4400
 1552 0108 7C404040 		.ascii	"|@@@@\000"
 1552      4000
 1553 010e 7C081008 		.ascii	"|\010\020\010|\000"
 1553      7C00
 1554 0114 7C081020 		.ascii	"|\010\020 |\000"
 1554      7C00
 1555 011a 38444444 		.ascii	"8DDD8\000"
 1555      3800
 1556 0120 7C141414 		.ascii	"|\024\024\024\010\000"
 1556      0800
 1557 0126 3C246424 		.ascii	"<$d$<\000"
 1557      3C00
 1558 012c 7C141414 		.ascii	"|\024\024\024h\000"
 1558      6800
 1559 0132 5C545454 		.ascii	"\\TTTt\000"
 1559      7400
 1560 0138 04047C04 		.ascii	"\004\004|\004\004\000"
 1560      0400
 1561 013e 7C404040 		.ascii	"|@@@|\000"
 1561      7C00
 1562 0144 0C304030 		.ascii	"\0140@0\014\000"
 1562      0C00
 1563 014a 3C403040 		.ascii	"<@0@<\000"
 1563      3C00
 1564 0150 44281028 		.ascii	"D(\020(D\000"
 1564      4400
 1565 0156 0C106010 		.ascii	"\014\020`\020\014\000"
 1565      0C00
 1566 015c 4464544C 		.ascii	"DdTLD\000"
 1566      4400
 1567 0162 7C440000 		.ascii	"|D\000\000\000\000"
 1567      0000
 1568 0168 0C106000 		.ascii	"\014\020`\000\000\000"
 1568      0000
 1569 016e 447C0000 		.ascii	"D|\000\000\000\000"
 1569      0000
 1570 0174 00010001 		.ascii	"\000\001\000\001\000\000"
 1570      0000
 1571 017a 40404040 		.ascii	"@@@@@@"
 1571      4040
 1572 0180 00010000 		.ascii	"\000\001\000\000\000\000"
 1572      0000
 1573 0186 7C242424 		.ascii	"|$$$|\000"
 1573      7C00
 1574 018c 7C545454 		.ascii	"|TTTl\000"
 1574      6C00
 1575 0192 7C444444 		.ascii	"|DDDD\000"
 1575      4400
 1576 0198 7C444444 		.ascii	"|DDD8\000"
 1576      3800
 1577 019e 7C545454 		.ascii	"|TTTD\000"
 1577      4400
 1578 01a4 7C141414 		.ascii	"|\024\024\024\004\000"
 1578      0400
 1579 01aa 7C444454 		.ascii	"|DDTt\000"
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 40


 1579      7400
 1580 01b0 7C101010 		.ascii	"|\020\020\020|\000"
 1580      7C00
 1581 01b6 44447C44 		.ascii	"DD|DD\000"
 1581      4400
 1582 01bc 60404044 		.ascii	"`@@D|\000"
 1582      7C00
 1583 01c2 7C101028 		.ascii	"|\020\020(D\000"
 1583      4400
 1584 01c8 7C404040 		.ascii	"|@@@@\000"
 1584      4000
 1585 01ce 7C081008 		.ascii	"|\010\020\010|\000"
 1585      7C00
 1586 01d4 7C081020 		.ascii	"|\010\020 |\000"
 1586      7C00
 1587 01da 38444444 		.ascii	"8DDD8\000"
 1587      3800
 1588 01e0 7C141414 		.ascii	"|\024\024\024\010\000"
 1588      0800
 1589 01e6 3C246424 		.ascii	"<$d$<\000"
 1589      3C00
 1590 01ec 7C141414 		.ascii	"|\024\024\024h\000"
 1590      6800
 1591 01f2 5C545454 		.ascii	"\\TTTt\000"
 1591      7400
 1592 01f8 04047C04 		.ascii	"\004\004|\004\004\000"
 1592      0400
 1593 01fe 7C404040 		.ascii	"|@@@|\000"
 1593      7C00
 1594 0204 0C304030 		.ascii	"\0140@0\014\000"
 1594      0C00
 1595 020a 3C403040 		.ascii	"<@0@<\000"
 1595      3C00
 1596 0210 44281028 		.ascii	"D(\020(D\000"
 1596      4400
 1597 0216 0C106010 		.ascii	"\014\020`\020\014\000"
 1597      0C00
 1598 021c 4464544C 		.ascii	"DdTLD\000"
 1598      4400
 1599 0222 107C4400 		.ascii	"\020|D\000\000\000"
 1599      0000
 1600 0228 6C000000 		.ascii	"l\000\000\000\000\000"
 1600      0000
 1601 022e 447C1000 		.ascii	"D|\020\000\000\000"
 1601      0000
 1602 0234 02010201 		.ascii	"\002\001\002\001\000\000"
 1602      0000
 1603 023a 00000000 		.ascii	"\000\000\000\000\000\000"
 1603      0000
 1604              		.text
 1605              	.Letext0:
 1606              		.file 2 "c:\\users\\zacht\\desktop\\files\\projects\\stm32_tools\\gcc-arm-none-eabi-10.3-2021.10\\
 1607              		.file 3 "c:\\users\\zacht\\desktop\\files\\projects\\stm32_tools\\gcc-arm-none-eabi-10.3-2021.10\\
 1608              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xc.h"
 1609              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1610              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1611              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 41


 1612              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1613              		.file 9 "Core/Inc/5x5_font.h"
 1614              		.file 10 "Core/Inc/spi.h"
 1615              		.file 11 "Core/Inc/ILI9341_STM32_Driver.h"
ARM GAS  C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 ILI9341_GFX.c
C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s:20     .text.ILI9341_Draw_Hollow_Circle:00000000 $t
C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s:26     .text.ILI9341_Draw_Hollow_Circle:00000000 ILI9341_Draw_Hollow_Circle
C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s:230    .text.ILI9341_Draw_Filled_Circle:00000000 $t
C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s:236    .text.ILI9341_Draw_Filled_Circle:00000000 ILI9341_Draw_Filled_Circle
C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s:432    .text.ILI9341_Draw_Hollow_Rectangle_Coord:00000000 $t
C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s:438    .text.ILI9341_Draw_Hollow_Rectangle_Coord:00000000 ILI9341_Draw_Hollow_Rectangle_Coord
C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s:611    .text.ILI9341_Draw_Filled_Rectangle_Coord:00000000 $t
C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s:617    .text.ILI9341_Draw_Filled_Rectangle_Coord:00000000 ILI9341_Draw_Filled_Rectangle_Coord
C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s:748    .text.ILI9341_Draw_Char:00000000 $t
C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s:754    .text.ILI9341_Draw_Char:00000000 ILI9341_Draw_Char
C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s:933    .text.ILI9341_Draw_Char:000000b8 $d
C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s:938    .text.ILI9341_Draw_Text:00000000 $t
C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s:944    .text.ILI9341_Draw_Text:00000000 ILI9341_Draw_Text
C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s:1012   .text.ILI9341_Draw_Image:00000000 $t
C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s:1018   .text.ILI9341_Draw_Image:00000000 ILI9341_Draw_Image
C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s:1497   .text.ILI9341_Draw_Image:000001e0 $d
C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s:1503   .rodata.font:00000000 $d
C:\Users\zacht\AppData\Local\Temp\ccFAk6iX.s:1507   .rodata.font:00000000 font

UNDEFINED SYMBOLS
ILI9341_Draw_Pixel
ILI9341_Draw_Horizontal_Line
ILI9341_Draw_Vertical_Line
ILI9341_Draw_Rectangle
ILI9341_Set_Rotation
ILI9341_Set_Address
HAL_GPIO_WritePin
HAL_SPI_Transmit
hspi1
